/*BEGIN_HEADER
*
* Copyright (C) 2020 Mahdi Safsafi.
*
* https://github.com/MahdiSafsafi/AMED
*
* See licence file 'LICENCE' for use and distribution rights.
*
*END_HEADER*/


/*===----------------------------------------------------------------------===*\
|*                                                                            *|
|*                Automatically generated file, do not edit!                  *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

static const amed_db_reg reg0 = {.encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg1 = {.encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg2 = {.encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg3 = {.encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg4 = {.encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg5 = {.encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg6 = {.encodedin=1, .has_encodedin=1, .sp=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg7 = {.encodedin=3, .has_encodedin=1, .read=1, .sp=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_amount amount0 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=7, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_extend extend0 = {.encodedin=9, .has_encodedin=1, .symbol=MK_SYMBOL(extend), .table=(void*)&tbl_extend0, .type=MK_TYPE(EXTEND)};
static const amed_db_shifter shifter0 = {.amount=(void*)&amount0, .extend=(void*)&extend0, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regsh regsh0 = {.reg=(void*)&reg2, .shifter=(void*)&shifter0, .type=MK_TYPE(REGSH)};
static const amed_db_reg reg8 = {.encodedin=1, .has_encodedin=1, .sp=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg9 = {.encodedin=3, .has_encodedin=1, .read=1, .sp=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_extend extend1 = {.encodedin=9, .has_encodedin=1, .symbol=MK_SYMBOL(extend), .table=(void*)&tbl_extend1, .type=MK_TYPE(EXTEND)};
static const amed_db_shifter shifter1 = {.amount=(void*)&amount0, .extend=(void*)&extend1, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regsh regsh1 = {.reg=(void*)&reg5, .shifter=(void*)&shifter1, .type=MK_TYPE(REGSH)};
static const amed_db_regsh regsh2 = {.reg=(void*)&reg2, .shifter=(void*)&shifter1, .type=MK_TYPE(REGSH)};
static const amed_db_imm imm0 = {.datatype=MK_DATATYPE(U16), .encodedin=11, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_shifter shifter2 = {.default_to=MK_DEFAULT_TO(LSL #0), .encodedin=13, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(shifter), .table=(void*)&tbl_shifter, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh0 = {.imm=(void*)&imm0, .shifter=(void*)&shifter2, .type=MK_TYPE(IMMSH)};
static const amed_db_amount amount1 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=15, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_shift shift0 = {.default_to=MK_DEFAULT_TO(LSL), .encodedin=17, .has_encodedin=1, .symbol=MK_SYMBOL(shift), .table=(void*)&tbl_shift0, .type=MK_TYPE(SHIFT)};
static const amed_db_shifter shifter3 = {.amount=(void*)&amount1, .optional=1, .shift=(void*)&shift0, .type=MK_TYPE(SHIFTER)};
static const amed_db_regsh regsh3 = {.reg=(void*)&reg2, .shifter=(void*)&shifter3, .type=MK_TYPE(REGSH)};
static const amed_db_regsh regsh4 = {.reg=(void*)&reg5, .shifter=(void*)&shifter3, .type=MK_TYPE(REGSH)};
static const amed_db_imm imm1 = {.datatype=MK_DATATYPE(U16), .encodedin=19, .has_encodedin=1, .scale=16, .symbol=MK_SYMBOL(uimm6), .type=MK_TYPE(IMM)};
static const amed_db_imm imm2 = {.datatype=MK_DATATYPE(U8), .encodedin=21, .has_encodedin=1, .symbol=MK_SYMBOL(uimm4), .type=MK_TYPE(IMM)};
static const amed_db_addr addr0 = {.datatype=MK_DATATYPE(S64), .encodedin=23, .has_encodedin=1, .signpos=MK_SIGNPOS(immhi<18>), .symbol=MK_SYMBOL(label), .type=MK_TYPE(ADDR)};
static const amed_db_label label0 = {.datatype=MK_DATATYPE(S64), .encodedin=23, .has_encodedin=1, .scale=4096, .signpos=MK_SIGNPOS(immhi<18>), .symbol=MK_SYMBOL(label), .type=MK_TYPE(LABEL)};
static const amed_db_imm imm3 = {.datatype=MK_DATATYPE(I32), .encodedin=26, .has_encodedin=1, .symbol=MK_SYMBOL(aimm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm4 = {.datatype=MK_DATATYPE(I64), .encodedin=26, .has_encodedin=1, .symbol=MK_SYMBOL(aimm), .type=MK_TYPE(IMM)};
static const amed_db_shift shift1 = {.default_to=MK_DEFAULT_TO(LSL), .encodedin=17, .has_encodedin=1, .symbol=MK_SYMBOL(shift), .table=(void*)&tbl_shift1, .type=MK_TYPE(SHIFT)};
static const amed_db_shifter shifter4 = {.amount=(void*)&amount1, .optional=1, .shift=(void*)&shift1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regsh regsh5 = {.reg=(void*)&reg2, .shifter=(void*)&shifter4, .type=MK_TYPE(REGSH)};
static const amed_db_regsh regsh6 = {.reg=(void*)&reg5, .shifter=(void*)&shifter4, .type=MK_TYPE(REGSH)};
static const amed_db_label label1 = {.datatype=MK_DATATYPE(S64), .encodedin=29, .has_encodedin=1, .scale=4, .signpos=MK_SIGNPOS(imm19<18>), .symbol=MK_SYMBOL(label), .type=MK_TYPE(LABEL)};
static const amed_db_label label2 = {.datatype=MK_DATATYPE(S64), .encodedin=31, .has_encodedin=1, .scale=4, .signpos=MK_SIGNPOS(imm26<25>), .symbol=MK_SYMBOL(label), .type=MK_TYPE(LABEL)};
static const amed_db_imm imm5 = {.datatype=MK_DATATYPE(U8), .encodedin=19, .has_encodedin=1, .symbol=MK_SYMBOL(immr), .type=MK_TYPE(IMM)};
static const amed_db_imm imm6 = {.datatype=MK_DATATYPE(U8), .encodedin=15, .has_encodedin=1, .symbol=MK_SYMBOL(imms), .type=MK_TYPE(IMM)};
static const amed_db_reg reg10 = {.encodedin=1, .has_encodedin=1, .read=1, .sp=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_imm imm7 = {.datatype=MK_DATATYPE(U16), .encodedin=33, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_bti_op bti_op0 = {.encodedin=35, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(targets), .table=(void*)&tbl_bti_op, .type=MK_TYPE(BTI_OP)};
static const amed_db_reg reg11 = {.encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg12 = {.encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_base base0 = {.encodedin=3, .has_encodedin=1, .read=1, .sp=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(BASE)};
static const amed_db_immoff immoff0 = {.datatype=MK_DATATYPE(U8), .optional=1, .type=MK_TYPE(IMMOFF), .value=0};
static const amed_db_size size0 = {.size=32};
static const amed_db_mem mem0 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem1 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem2 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem3 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg13 = {.encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg14 = {.encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_size size1 = {.size=64};
static const amed_db_mem mem4 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem5 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem6 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem7 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_size size2 = {.size=8};
static const amed_db_mem mem8 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem9 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem10 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem11 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_size size3 = {.size=16};
static const amed_db_mem mem12 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem13 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem14 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem15 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg15 = {.encodedin=5, .even=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg16 = {.encodedin=5, .has_encodedin=1, .pair=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg17 = {.encodedin=1, .even=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg18 = {.encodedin=1, .has_encodedin=1, .pair=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_mem mem16 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem17 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem18 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem19 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg19 = {.encodedin=5, .even=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg20 = {.encodedin=5, .has_encodedin=1, .pair=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg21 = {.encodedin=1, .even=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg22 = {.encodedin=1, .has_encodedin=1, .pair=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_size size4 = {.size=128};
static const amed_db_mem mem20 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size4, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem21 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size4, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem22 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size4, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem23 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size4, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_imm imm8 = {.datatype=MK_DATATYPE(I32), .encodedin=5, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm9 = {.datatype=MK_DATATYPE(U8), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(nzcv), .type=MK_TYPE(IMM)};
static const amed_db_cond cond0 = {.encodedin=39, .has_encodedin=1, .symbol=MK_SYMBOL(cond), .type=MK_TYPE(COND)};
static const amed_db_imm imm10 = {.datatype=MK_DATATYPE(I64), .encodedin=5, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm11 = {.datatype=MK_DATATYPE(U8), .default_to=15, .encodedin=41, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm12 = {.datatype=MK_DATATYPE(U16), .default_to=0, .encodedin=33, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_barrier barrier0 = {.encodedin=41, .has_encodedin=1, .symbol=MK_SYMBOL(option), .type=MK_TYPE(BARRIER)};
static const amed_db_imm imm13 = {.datatype=MK_DATATYPE(U8), .encodedin=15, .has_encodedin=1, .symbol=MK_SYMBOL(lsb), .type=MK_TYPE(IMM)};
static const amed_db_imm imm14 = {.datatype=MK_DATATYPE(U8), .encodedin=43, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg23 = {.default_to=MK_DEFAULT_TO(XZR), .encodedin=5, .has_encodedin=1, .optional=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_barrier barrier1 = {.encodedin=41, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(option), .type=MK_TYPE(BARRIER)};
static const amed_db_mem mem24 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem25 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem26 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem27 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem28 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem29 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem30 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem31 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem32 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem33 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem34 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem35 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem36 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem37 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem38 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem39 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem40 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem41 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem42 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem43 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff1 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=45, .has_encodedin=1, .optional=1, .signpos=MK_SIGNPOS(imm9<8>), .symbol=MK_SYMBOL(simm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem44 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem45 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem46 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem47 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_reg reg24 = {.datatype=MK_DATATYPE(S32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem48 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_reg reg25 = {.datatype=MK_DATATYPE(S64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem49 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem50 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(ACQUIRE), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_reg reg26 = {.encodedin=47, .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem51 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg27 = {.encodedin=47, .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem52 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem53 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem54 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem55 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem56 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_reg reg28 = {.encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_immoff immoff2 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=45, .has_encodedin=1, .optional=1, .scale=16, .signpos=MK_SIGNPOS(imm9<8>), .symbol=MK_SYMBOL(simm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem57 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff2, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem58 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem59 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(LOACQUIRE), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem60 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(LOACQUIRE), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem61 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(LOACQUIRE), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem62 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(LOACQUIRE), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff3 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=49, .has_encodedin=1, .optional=1, .scale=4, .signpos=MK_SIGNPOS(imm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem63 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff3, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff4 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=49, .has_encodedin=1, .optional=1, .scale=8, .signpos=MK_SIGNPOS(imm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem64 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff4, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff5 = {.datatype=MK_DATATYPE(S16), .encodedin=49, .has_encodedin=1, .scale=4, .signpos=MK_SIGNPOS(imm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem65 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff5, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff6 = {.datatype=MK_DATATYPE(S16), .encodedin=49, .has_encodedin=1, .scale=8, .signpos=MK_SIGNPOS(imm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem66 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff6, .post_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem67 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff5, .pre_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem68 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff6, .pre_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_reg reg29 = {.datatype=MK_DATATYPE(S64), .encodedin=47, .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem69 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff5, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem70 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff5, .pre_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem71 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff3, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff7 = {.datatype=MK_DATATYPE(S16), .encodedin=45, .has_encodedin=1, .signpos=MK_SIGNPOS(imm9<8>), .symbol=MK_SYMBOL(simm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem72 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem73 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem74 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem75 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff8 = {.datatype=MK_DATATYPE(U16), .default_to=0, .encodedin=11, .has_encodedin=1, .optional=1, .scale=4, .symbol=MK_SYMBOL(pimm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem76 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff8, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff9 = {.datatype=MK_DATATYPE(U16), .default_to=0, .encodedin=11, .has_encodedin=1, .optional=1, .scale=8, .symbol=MK_SYMBOL(pimm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem77 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff9, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_amount amount2 = {.datatype=MK_DATATYPE(I32), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm6, .type=MK_TYPE(AMOUNT)};
static const amed_db_extend extend2 = {.default_to=MK_DEFAULT_TO(LSL), .encodedin=9, .has_encodedin=1, .symbol=MK_SYMBOL(extend), .table=(void*)&tbl_extend3, .type=MK_TYPE(EXTEND)};
static const amed_db_shifter shifter5 = {.amount=(void*)&amount2, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh0 = {.reg=(void*)&reg2, .shifter=(void*)&shifter5, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem78 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh0, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh1 = {.reg=(void*)&reg5, .shifter=(void*)&shifter5, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem79 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_amount amount3 = {.datatype=MK_DATATYPE(I64), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm7, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter6 = {.amount=(void*)&amount3, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh2 = {.reg=(void*)&reg2, .shifter=(void*)&shifter6, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem80 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh2, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh3 = {.reg=(void*)&reg5, .shifter=(void*)&shifter6, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem81 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh3, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff10 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=53, .has_encodedin=1, .optional=1, .scale=8, .signpos=MK_SIGNPOS(S), .symbol=MK_SYMBOL(simm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem82 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff10, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem83 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff10, .pre_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem84 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem85 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff11 = {.datatype=MK_DATATYPE(U16), .default_to=0, .encodedin=11, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(pimm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem86 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff11, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_amount amount4 = {.datatype=MK_DATATYPE(I32), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_extend extend3 = {.encodedin=9, .has_encodedin=1, .symbol=MK_SYMBOL(extend), .table=(void*)&tbl_extend2, .type=MK_TYPE(EXTEND)};
static const amed_db_shifter shifter7 = {.amount=(void*)&amount4, .extend=(void*)&extend3, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh4 = {.reg=(void*)&reg2, .shifter=(void*)&shifter7, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem87 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoffsh=(void*)&regoffsh4, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh5 = {.reg=(void*)&reg5, .shifter=(void*)&shifter7, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem88 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoffsh=(void*)&regoffsh5, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_shift shift2 = {.type=MK_TYPE(SHIFT), .value=MK_SHIFT(LSL)};
static const amed_db_shifter shifter8 = {.amount=(void*)&amount4, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh6 = {.reg=(void*)&reg5, .shifter=(void*)&shifter8, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem89 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoffsh=(void*)&regoffsh6, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem90 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem91 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff12 = {.datatype=MK_DATATYPE(U16), .default_to=0, .encodedin=11, .has_encodedin=1, .optional=1, .scale=2, .symbol=MK_SYMBOL(pimm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem92 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff12, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_amount amount5 = {.datatype=MK_DATATYPE(I32), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm5, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter9 = {.amount=(void*)&amount5, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh7 = {.reg=(void*)&reg2, .shifter=(void*)&shifter9, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem93 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh7, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh8 = {.reg=(void*)&reg5, .shifter=(void*)&shifter9, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem94 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh8, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem95 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem96 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem97 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff11, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem98 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoffsh=(void*)&regoffsh4, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem99 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoffsh=(void*)&regoffsh5, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem100 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoffsh=(void*)&regoffsh6, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_amount amount6 = {.datatype=MK_DATATYPE(I64), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter10 = {.amount=(void*)&amount6, .extend=(void*)&extend3, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh9 = {.reg=(void*)&reg2, .shifter=(void*)&shifter10, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem101 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoffsh=(void*)&regoffsh9, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh10 = {.reg=(void*)&reg5, .shifter=(void*)&shifter10, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem102 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoffsh=(void*)&regoffsh10, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_shifter shifter11 = {.amount=(void*)&amount6, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh11 = {.reg=(void*)&reg5, .shifter=(void*)&shifter11, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem103 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoffsh=(void*)&regoffsh11, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem104 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem105 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem106 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff12, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem107 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh7, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem108 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh8, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_amount amount7 = {.datatype=MK_DATATYPE(I64), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm5, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter12 = {.amount=(void*)&amount7, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh12 = {.reg=(void*)&reg2, .shifter=(void*)&shifter12, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem109 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh12, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh13 = {.reg=(void*)&reg5, .shifter=(void*)&shifter12, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem110 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh13, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem111 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem112 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem113 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff8, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_amount amount8 = {.datatype=MK_DATATYPE(I64), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm6, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter13 = {.amount=(void*)&amount8, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh14 = {.reg=(void*)&reg2, .shifter=(void*)&shifter13, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem114 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .regoffsh=(void*)&regoffsh14, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh15 = {.reg=(void*)&reg5, .shifter=(void*)&shifter13, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem115 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .regoffsh=(void*)&regoffsh15, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_reg reg30 = {.datatype=MK_DATATYPE(S32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_mem mem116 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem117 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem118 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem119 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg31 = {.datatype=MK_DATATYPE(S64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_mem mem120 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S64), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem121 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S64), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem122 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S64), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem123 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S64), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem124 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem125 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem126 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem127 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem128 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem129 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem130 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem131 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem132 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(UNPRIVILEGED), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem133 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(UNPRIVILEGED), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem134 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(UNPRIVILEGED), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem135 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(UNPRIVILEGED), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem136 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(UNPRIVILEGED), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem137 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(UNPRIVILEGED), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem138 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff1, .ldacc=MK_LDACC(UNPRIVILEGED), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_reg reg32 = {.datatype=MK_DATATYPE(U32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg33 = {.datatype=MK_DATATYPE(U32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem139 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem140 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem141 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem142 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg34 = {.datatype=MK_DATATYPE(U64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg35 = {.datatype=MK_DATATYPE(U64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem143 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U64), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem144 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U64), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem145 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U64), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem146 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U64), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem147 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem148 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem149 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem150 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem151 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem152 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .ldacc=MK_LDACC(ATOMIC_ACQUIRE), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem153 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem154 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem155 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem156 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem157 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem158 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem159 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem160 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem161 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem162 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem163 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem164 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem165 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem166 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem167 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .ldacc=MK_LDACC(ATOMIC), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_reg reg36 = {.encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg37 = {.encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_amount amount9 = {.datatype=MK_DATATYPE(I32), .encodedin=55, .has_encodedin=1, .scale=16, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter14 = {.amount=(void*)&amount9, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh1 = {.imm=(void*)&imm7, .shifter=(void*)&shifter14, .type=MK_TYPE(IMMSH)};
static const amed_db_amount amount10 = {.datatype=MK_DATATYPE(I64), .encodedin=55, .has_encodedin=1, .scale=16, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter15 = {.amount=(void*)&amount10, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh2 = {.imm=(void*)&imm7, .shifter=(void*)&shifter15, .type=MK_TYPE(IMMSH)};
static const amed_db_sysreg sysreg0 = {.encodedin=57, .has_encodedin=1, .symbol=MK_SYMBOL(systemreg), .type=MK_TYPE(SYSREG)};
static const amed_db_pstatefield pstatefield0 = {.encodedin=61, .has_encodedin=1, .symbol=MK_SYMBOL(pstatefield), .table=(void*)&tbl_pstatefield, .type=MK_TYPE(PSTATEFIELD)};
static const amed_db_imm imm15 = {.datatype=MK_DATATYPE(U8), .encodedin=41, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg38 = {.encodedin=5, .has_encodedin=1, .read=1, .sp=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_prf_op prf_op0 = {.encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(prfop), .type=MK_TYPE(PRF_OP)};
static const amed_db_size size5 = {.size=0};
static const amed_db_mem mem168 = {.base=(void*)&base0, .immoff=(void*)&immoff9, .read=1, .size=(void*)&size5, .type=MK_TYPE(MEM)};
static const amed_db_amount amount11 = {.datatype=MK_DATATYPE(I32), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm7, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter16 = {.amount=(void*)&amount11, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh16 = {.reg=(void*)&reg2, .shifter=(void*)&shifter16, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem169 = {.base=(void*)&base0, .read=1, .regoffsh=(void*)&regoffsh16, .size=(void*)&size5, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh17 = {.reg=(void*)&reg5, .shifter=(void*)&shifter16, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem170 = {.base=(void*)&base0, .read=1, .regoffsh=(void*)&regoffsh17, .size=(void*)&size5, .type=MK_TYPE(MEM)};
static const amed_db_mem mem171 = {.base=(void*)&base0, .immoff=(void*)&immoff1, .read=1, .size=(void*)&size5, .type=MK_TYPE(MEM)};
static const amed_db_sync_op sync_op0 = {.type=MK_TYPE(SYNC_OP), .value=MK_SYNC_OP(CSYNC)};
static const amed_db_reg reg39 = {.default_to=MK_DEFAULT_TO(X30), .encodedin=3, .has_encodedin=1, .optional=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_imm imm16 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=63, .has_encodedin=1, .symbol=MK_SYMBOL(shift), .type=MK_TYPE(IMM)};
static const amed_db_imm imm17 = {.datatype=MK_DATATYPE(U8), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(mask), .type=MK_TYPE(IMM)};
static const amed_db_reg reg40 = {.datatype=MK_DATATYPE(S32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg41 = {.datatype=MK_DATATYPE(S64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg42 = {.datatype=MK_DATATYPE(S64), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_immoff immoff13 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=45, .has_encodedin=1, .scale=16, .signpos=MK_SIGNPOS(imm9<8>), .symbol=MK_SYMBOL(simm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem172 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff13, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem173 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff13, .pre_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem174 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff2, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem175 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_immoff immoff14 = {.datatype=MK_DATATYPE(S16), .encodedin=49, .has_encodedin=1, .scale=16, .signpos=MK_SIGNPOS(simm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem176 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff14, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem177 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff14, .pre_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_immoff immoff15 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=49, .has_encodedin=1, .optional=1, .scale=16, .signpos=MK_SIGNPOS(simm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem178 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff15, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem179 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .size=(void*)&size0, .stacc=MK_STACC(LORELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem180 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .size=(void*)&size1, .stacc=MK_STACC(LORELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem181 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .size=(void*)&size2, .stacc=MK_STACC(LORELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem182 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .size=(void*)&size3, .stacc=MK_STACC(LORELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem183 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .size=(void*)&size0, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem184 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .size=(void*)&size1, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem185 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .size=(void*)&size2, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem186 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .size=(void*)&size3, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem187 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff1, .size=(void*)&size0, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem188 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff1, .size=(void*)&size1, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem189 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff1, .size=(void*)&size2, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem190 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff1, .size=(void*)&size3, .stacc=MK_STACC(RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg43 = {.encodedin=5, .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem191 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem192 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .size=(void*)&size4, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem193 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem194 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem195 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem196 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC_RELEASE), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem197 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff3, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem198 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff4, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem199 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff5, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem200 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff6, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem201 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff5, .pre_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem202 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff6, .pre_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem203 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem204 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem205 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem206 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem207 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff8, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem208 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff9, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem209 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .regoffsh=(void*)&regoffsh0, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem210 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .regoffsh=(void*)&regoffsh1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem211 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .regoffsh=(void*)&regoffsh2, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem212 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .regoffsh=(void*)&regoffsh3, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem213 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem214 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem215 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff11, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem216 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoffsh=(void*)&regoffsh4, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem217 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoffsh=(void*)&regoffsh5, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem218 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoffsh=(void*)&regoffsh6, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem219 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem220 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem221 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff12, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem222 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .regoffsh=(void*)&regoffsh7, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem223 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .regoffsh=(void*)&regoffsh8, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem224 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff1, .size=(void*)&size0, .stacc=MK_STACC(UNPRIVILEGED), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem225 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff1, .size=(void*)&size1, .stacc=MK_STACC(UNPRIVILEGED), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem226 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff1, .size=(void*)&size2, .stacc=MK_STACC(UNPRIVILEGED), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem227 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff1, .size=(void*)&size3, .stacc=MK_STACC(UNPRIVILEGED), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem228 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem229 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem230 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff1, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem231 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem232 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem233 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .size=(void*)&size4, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem234 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff0, .size=(void*)&size0, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem235 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff0, .size=(void*)&size1, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem236 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff0, .size=(void*)&size2, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem237 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff0, .size=(void*)&size3, .stacc=MK_STACC(ATOMIC), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem238 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem239 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem240 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem241 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_imm imm18 = {.datatype=MK_DATATYPE(U8), .encodedin=65, .has_encodedin=1, .symbol=MK_SYMBOL(op1), .type=MK_TYPE(IMM)};
static const amed_db_cspace cspace0 = {.encodedin=39, .has_encodedin=1, .symbol=MK_SYMBOL(Cn), .type=MK_TYPE(CSPACE)};
static const amed_db_cspace cspace1 = {.encodedin=41, .has_encodedin=1, .symbol=MK_SYMBOL(Cm), .type=MK_TYPE(CSPACE)};
static const amed_db_imm imm19 = {.datatype=MK_DATATYPE(U8), .encodedin=67, .has_encodedin=1, .symbol=MK_SYMBOL(op2), .type=MK_TYPE(IMM)};
static const amed_db_reg reg44 = {.default_to=MK_DEFAULT_TO(0b11111), .encodedin=1, .has_encodedin=1, .optional=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_imm imm20 = {.datatype=MK_DATATYPE(U8), .encodedin=69, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_label label3 = {.datatype=MK_DATATYPE(S64), .encodedin=71, .has_encodedin=1, .scale=4, .signpos=MK_SIGNPOS(imm14<13>), .symbol=MK_SYMBOL(label), .type=MK_TYPE(LABEL)};
static const amed_db_reg reg45 = {.datatype=MK_DATATYPE(U32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg46 = {.datatype=MK_DATATYPE(U64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_imm imm21 = {.datatype=MK_DATATYPE(U16), .encodedin=73, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg47 = {.datatype=MK_DATATYPE(U64), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_imm imm22 = {.datatype=MK_DATATYPE(U8), .encodedin=19, .has_encodedin=1, .symbol=MK_SYMBOL(shift), .type=MK_TYPE(IMM)};
static const amed_db_at_op at_op0 = {.encodedin=75, .has_encodedin=1, .symbol=MK_SYMBOL(at_op), .table=(void*)&tbl_at_op, .type=MK_TYPE(AT_OP)};
static const amed_db_imm imm23 = {.datatype=MK_DATATYPE(U8), .encodedin=19, .has_encodedin=1, .symbol=MK_SYMBOL(lsb), .type=MK_TYPE(IMM)};
static const amed_db_imm imm24 = {.datatype=MK_DATATYPE(U8), .encodedin=15, .has_encodedin=1, .symbol=MK_SYMBOL(width), .type=MK_TYPE(IMM)};
static const amed_db_reg reg48 = {.encodedin=3, .has_encodedin=1, .nozr=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg49 = {.encodedin=3, .has_encodedin=1, .nozr=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_ctx_op ctx_op0 = {.type=MK_TYPE(CTX_OP), .value=MK_CTX_OP(RCTX)};
static const amed_db_reg reg50 = {.encodedin=77, .has_encodedin=1, .nozr=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_invcond invcond0 = {.encodedin=39, .has_encodedin=1, .symbol=MK_SYMBOL(cond), .type=MK_TYPE(INVCOND)};
static const amed_db_reg reg51 = {.encodedin=77, .has_encodedin=1, .nozr=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg52 = {.encodedin=77, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg53 = {.encodedin=77, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_dc_op dc_op0 = {.encodedin=79, .has_encodedin=1, .symbol=MK_SYMBOL(dc_op), .table=(void*)&tbl_dc_op, .type=MK_TYPE(DC_OP)};
static const amed_db_ic_op ic_op0 = {.encodedin=79, .has_encodedin=1, .symbol=MK_SYMBOL(ic_op), .table=(void*)&tbl_ic_op, .type=MK_TYPE(IC_OP)};
static const amed_db_imm imm25 = {.datatype=MK_DATATYPE(I32), .encodedin=81, .has_encodedin=1, .symbol=MK_SYMBOL(WideImmInverted), .type=MK_TYPE(IMM)};
static const amed_db_imm imm26 = {.datatype=MK_DATATYPE(I64), .encodedin=81, .has_encodedin=1, .symbol=MK_SYMBOL(WideImmInverted), .type=MK_TYPE(IMM)};
static const amed_db_imm imm27 = {.datatype=MK_DATATYPE(I32), .encodedin=81, .has_encodedin=1, .symbol=MK_SYMBOL(WideImmAlias), .type=MK_TYPE(IMM)};
static const amed_db_imm imm28 = {.datatype=MK_DATATYPE(I64), .encodedin=81, .has_encodedin=1, .symbol=MK_SYMBOL(WideImmAlias), .type=MK_TYPE(IMM)};
static const amed_db_reg reg54 = {.encodedin=77, .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_imm imm29 = {.datatype=MK_DATATYPE(U8), .encodedin=15, .has_encodedin=1, .symbol=MK_SYMBOL(shift), .type=MK_TYPE(IMM)};
static const amed_db_reg reg55 = {.encodedin=77, .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_tlbi_op tlbi_op0 = {.encodedin=79, .has_encodedin=1, .symbol=MK_SYMBOL(tlbi_op), .table=(void*)&tbl_tlbi_op, .type=MK_TYPE(TLBI_OP)};
static const amed_db_reg reg56 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg57 = {.datatype=MK_DATATYPE(I64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg58 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg0 = {.reg=(void*)&reg58, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_reg reg59 = {.datatype=MK_DATATYPE(I8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg1 = {.reg=(void*)&reg59, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_vreg vreg2 = {.reg=(void*)&reg58, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_vreg vreg3 = {.reg=(void*)&reg59, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_reg reg60 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg4 = {.reg=(void*)&reg60, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_reg reg61 = {.datatype=MK_DATATYPE(I16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg5 = {.reg=(void*)&reg61, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_vreg vreg6 = {.reg=(void*)&reg60, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_vreg vreg7 = {.reg=(void*)&reg61, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_reg reg62 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg8 = {.reg=(void*)&reg62, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_reg reg63 = {.datatype=MK_DATATYPE(I32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg9 = {.reg=(void*)&reg63, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_vreg vreg10 = {.reg=(void*)&reg62, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_vreg vreg11 = {.reg=(void*)&reg63, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_reg reg64 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg12 = {.reg=(void*)&reg64, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg65 = {.datatype=MK_DATATYPE(I64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg13 = {.reg=(void*)&reg65, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg66 = {.datatype=MK_DATATYPE(I64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg67 = {.datatype=MK_DATATYPE(I8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg14 = {.reg=(void*)&reg67, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_vreg vreg15 = {.reg=(void*)&reg67, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_reg reg68 = {.datatype=MK_DATATYPE(I16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg16 = {.reg=(void*)&reg68, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_vreg vreg17 = {.reg=(void*)&reg68, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_reg reg69 = {.datatype=MK_DATATYPE(I32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg18 = {.reg=(void*)&reg69, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_vreg vreg19 = {.reg=(void*)&reg69, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_reg reg70 = {.datatype=MK_DATATYPE(I64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg20 = {.reg=(void*)&reg70, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg71 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg72 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg73 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg74 = {.datatype=MK_DATATYPE(I8), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg21 = {.reg=(void*)&reg74, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_reg reg75 = {.datatype=MK_DATATYPE(I32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_idx idx0 = {.encodedin=83, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg0 = {.idx=(void*)&idx0, .reg=(void*)&reg68, .type=MK_TYPE(EREG), .vdt=MK_VDT(2H)};
static const amed_db_idx idx1 = {.encodedin=86, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_reg reg76 = {.datatype=MK_DATATYPE(I16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg1 = {.idx=(void*)&idx1, .reg=(void*)&reg76, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_imm imm30 = {.datatype=MK_DATATYPE(I16), .encodedin=91, .has_encodedin=1, .symbol=MK_SYMBOL(imm8), .type=MK_TYPE(IMM)};
static const amed_db_amount amount12 = {.datatype=MK_DATATYPE(I16), .encodedin=93, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm1, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter17 = {.amount=(void*)&amount12, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh3 = {.imm=(void*)&imm30, .shifter=(void*)&shifter17, .type=MK_TYPE(IMMSH)};
static const amed_db_imm imm31 = {.datatype=MK_DATATYPE(I32), .encodedin=91, .has_encodedin=1, .symbol=MK_SYMBOL(imm8), .type=MK_TYPE(IMM)};
static const amed_db_amount amount13 = {.datatype=MK_DATATYPE(I32), .encodedin=95, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm2, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter18 = {.amount=(void*)&amount13, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh4 = {.imm=(void*)&imm31, .shifter=(void*)&shifter18, .type=MK_TYPE(IMMSH)};
static const amed_db_imm imm32 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMM), .value=0};
static const amed_db_reg reg77 = {.datatype=MK_DATATYPE(S64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg78 = {.datatype=MK_DATATYPE(S64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg79 = {.datatype=MK_DATATYPE(S64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg80 = {.datatype=MK_DATATYPE(S8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg22 = {.reg=(void*)&reg80, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_reg reg81 = {.datatype=MK_DATATYPE(S8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg23 = {.reg=(void*)&reg81, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_reg reg82 = {.datatype=MK_DATATYPE(S8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg24 = {.reg=(void*)&reg82, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_vreg vreg25 = {.reg=(void*)&reg80, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_vreg vreg26 = {.reg=(void*)&reg81, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_vreg vreg27 = {.reg=(void*)&reg82, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_reg reg83 = {.datatype=MK_DATATYPE(S16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg28 = {.reg=(void*)&reg83, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_reg reg84 = {.datatype=MK_DATATYPE(S16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg29 = {.reg=(void*)&reg84, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_reg reg85 = {.datatype=MK_DATATYPE(S16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg30 = {.reg=(void*)&reg85, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_vreg vreg31 = {.reg=(void*)&reg83, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_vreg vreg32 = {.reg=(void*)&reg84, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_vreg vreg33 = {.reg=(void*)&reg85, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_reg reg86 = {.datatype=MK_DATATYPE(S32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg34 = {.reg=(void*)&reg86, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_reg reg87 = {.datatype=MK_DATATYPE(S32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg35 = {.reg=(void*)&reg87, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_reg reg88 = {.datatype=MK_DATATYPE(S32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg36 = {.reg=(void*)&reg88, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_vreg vreg37 = {.reg=(void*)&reg86, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_vreg vreg38 = {.reg=(void*)&reg87, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_vreg vreg39 = {.reg=(void*)&reg88, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_reg reg89 = {.datatype=MK_DATATYPE(S64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg40 = {.reg=(void*)&reg89, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg90 = {.datatype=MK_DATATYPE(S64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg41 = {.reg=(void*)&reg90, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg91 = {.datatype=MK_DATATYPE(S64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg42 = {.reg=(void*)&reg91, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_idx idx2 = {.encodedin=97, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg2 = {.idx=(void*)&idx2, .reg=(void*)&reg59, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_idx idx3 = {.encodedin=99, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg3 = {.idx=(void*)&idx3, .reg=(void*)&reg61, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_idx idx4 = {.encodedin=101, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg4 = {.idx=(void*)&idx4, .reg=(void*)&reg63, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_idx idx5 = {.encodedin=103, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg5 = {.idx=(void*)&idx5, .reg=(void*)&reg65, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_imm imm33 = {.datatype=MK_DATATYPE(I8), .encodedin=105, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm34 = {.datatype=MK_DATATYPE(I8), .encodedin=107, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg92 = {.datatype=MK_DATATYPE(F16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg93 = {.datatype=MK_DATATYPE(F16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_reg reg94 = {.datatype=MK_DATATYPE(F16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_reg reg95 = {.datatype=MK_DATATYPE(F32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg96 = {.datatype=MK_DATATYPE(F32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_reg reg97 = {.datatype=MK_DATATYPE(F32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_reg reg98 = {.datatype=MK_DATATYPE(F64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg99 = {.datatype=MK_DATATYPE(F64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg100 = {.datatype=MK_DATATYPE(F64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg101 = {.datatype=MK_DATATYPE(F16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg43 = {.reg=(void*)&reg101, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_reg reg102 = {.datatype=MK_DATATYPE(F16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg44 = {.reg=(void*)&reg102, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_reg reg103 = {.datatype=MK_DATATYPE(F16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg45 = {.reg=(void*)&reg103, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_vreg vreg46 = {.reg=(void*)&reg101, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_vreg vreg47 = {.reg=(void*)&reg102, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_vreg vreg48 = {.reg=(void*)&reg103, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_reg reg104 = {.datatype=MK_DATATYPE(F32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg49 = {.reg=(void*)&reg104, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_reg reg105 = {.datatype=MK_DATATYPE(F32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg50 = {.reg=(void*)&reg105, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_reg reg106 = {.datatype=MK_DATATYPE(F32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg51 = {.reg=(void*)&reg106, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_vreg vreg52 = {.reg=(void*)&reg104, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_vreg vreg53 = {.reg=(void*)&reg105, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_vreg vreg54 = {.reg=(void*)&reg106, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_reg reg107 = {.datatype=MK_DATATYPE(F64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg55 = {.reg=(void*)&reg107, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg108 = {.datatype=MK_DATATYPE(F64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg56 = {.reg=(void*)&reg108, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg109 = {.datatype=MK_DATATYPE(F64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg57 = {.reg=(void*)&reg109, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_vreg vreg58 = {.reg=(void*)&reg102, .type=MK_TYPE(VREG), .vdt=MK_VDT(2H)};
static const amed_db_imm imm35 = {.datatype=MK_DATATYPE(I16), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm36 = {.datatype=MK_DATATYPE(I32), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm37 = {.datatype=MK_DATATYPE(I64), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_fpimm fpimm0 = {.datatype=MK_DATATYPE(F32), .fpvalue=0.0, .type=MK_TYPE(FPIMM)};
static const amed_db_idx idx6 = {.encodedin=17, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg6 = {.idx=(void*)&idx6, .reg=(void*)&reg103, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_imm imm38 = {.datatype=MK_DATATYPE(I16), .encodedin=95, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_ereg ereg7 = {.idx=(void*)&idx6, .reg=(void*)&reg106, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_imm imm39 = {.datatype=MK_DATATYPE(I32), .encodedin=95, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm40 = {.datatype=MK_DATATYPE(I16), .encodedin=109, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm41 = {.datatype=MK_DATATYPE(I32), .encodedin=109, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm42 = {.datatype=MK_DATATYPE(I64), .encodedin=109, .has_encodedin=1, .symbol=MK_SYMBOL(rotate), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm43 = {.arg0=32, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_right), .type=MK_TYPE(IMM)};
static const amed_db_imm imm44 = {.arg0=64, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_right), .type=MK_TYPE(IMM)};
static const amed_db_imm imm45 = {.arg0=128, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_right), .type=MK_TYPE(IMM)};
static const amed_db_imm imm46 = {.arg0=64, .datatype=MK_DATATYPE(U8), .encodedin=15, .has_encodedin=1, .symbol=MK_SYMBOL(fbits_right), .type=MK_TYPE(IMM)};
static const amed_db_reg reg110 = {.datatype=MK_DATATYPE(F16), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_reg reg111 = {.datatype=MK_DATATYPE(F32), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_reg reg112 = {.datatype=MK_DATATYPE(F64), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg113 = {.datatype=MK_DATATYPE(F16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg8 = {.idx=(void*)&idx1, .reg=(void*)&reg113, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_ereg ereg9 = {.idx=(void*)&idx0, .reg=(void*)&reg106, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_idx idx7 = {.encodedin=113, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg10 = {.idx=(void*)&idx7, .reg=(void*)&reg109, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_vreg vreg59 = {.reg=(void*)&reg103, .type=MK_TYPE(VREG), .vdt=MK_VDT(2H)};
static const amed_db_fpimm fpimm1 = {.datatype=MK_DATATYPE(F16), .encodedin=91, .has_encodedin=1, .symbol=MK_SYMBOL(vfpimm), .type=MK_TYPE(FPIMM)};
static const amed_db_imm imm47 = {.datatype=MK_DATATYPE(F32), .encodedin=115, .has_encodedin=1, .symbol=MK_SYMBOL(advimm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm48 = {.datatype=MK_DATATYPE(F64), .encodedin=115, .has_encodedin=1, .symbol=MK_SYMBOL(advimm), .type=MK_TYPE(IMM)};
static const amed_db_idx idx8 = {.type=MK_TYPE(IDX), .value=1};
static const amed_db_ereg ereg11 = {.idx=(void*)&idx8, .reg=(void*)&reg107, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_ereg ereg12 = {.idx=(void*)&idx8, .reg=(void*)&reg108, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_fpimm fpimm2 = {.datatype=MK_DATATYPE(F16), .encodedin=118, .has_encodedin=1, .symbol=MK_SYMBOL(vfpimm), .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm3 = {.datatype=MK_DATATYPE(F32), .encodedin=118, .has_encodedin=1, .symbol=MK_SYMBOL(vfpimm), .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm4 = {.datatype=MK_DATATYPE(F64), .encodedin=118, .has_encodedin=1, .symbol=MK_SYMBOL(vfpimm), .type=MK_TYPE(FPIMM)};
static const amed_db_ereg ereg13 = {.idx=(void*)&idx2, .reg=(void*)&reg58, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_idx idx9 = {.encodedin=107, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg14 = {.idx=(void*)&idx9, .reg=(void*)&reg59, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_ereg ereg15 = {.idx=(void*)&idx3, .reg=(void*)&reg60, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_idx idx10 = {.encodedin=120, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg16 = {.idx=(void*)&idx10, .reg=(void*)&reg61, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_ereg ereg17 = {.idx=(void*)&idx4, .reg=(void*)&reg62, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_idx idx11 = {.encodedin=95, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg18 = {.idx=(void*)&idx11, .reg=(void*)&reg63, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_ereg ereg19 = {.idx=(void*)&idx5, .reg=(void*)&reg64, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_idx idx12 = {.encodedin=122, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg20 = {.idx=(void*)&idx12, .reg=(void*)&reg65, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_count count0 = {.type=MK_TYPE(COUNT), .value=1};
static const amed_db_vbase vbase0 = {.reg=(void*)&reg58, .type=MK_TYPE(VBASE), .vdt=MK_VDT(8B)};
static const amed_db_vlist vlist0 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase0};
static const amed_db_mem mem242 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase1 = {.reg=(void*)&reg58, .type=MK_TYPE(VBASE), .vdt=MK_VDT(16B)};
static const amed_db_vlist vlist1 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase1};
static const amed_db_mem mem243 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase2 = {.reg=(void*)&reg60, .type=MK_TYPE(VBASE), .vdt=MK_VDT(4H)};
static const amed_db_vlist vlist2 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase2};
static const amed_db_mem mem244 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase3 = {.reg=(void*)&reg60, .type=MK_TYPE(VBASE), .vdt=MK_VDT(8H)};
static const amed_db_vlist vlist3 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase3};
static const amed_db_mem mem245 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase4 = {.reg=(void*)&reg62, .type=MK_TYPE(VBASE), .vdt=MK_VDT(2S)};
static const amed_db_vlist vlist4 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase4};
static const amed_db_mem mem246 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase5 = {.reg=(void*)&reg62, .type=MK_TYPE(VBASE), .vdt=MK_VDT(4S)};
static const amed_db_vlist vlist5 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase5};
static const amed_db_mem mem247 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase6 = {.reg=(void*)&reg64, .type=MK_TYPE(VBASE), .vdt=MK_VDT(1D)};
static const amed_db_vlist vlist6 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase6};
static const amed_db_vbase vbase7 = {.reg=(void*)&reg64, .type=MK_TYPE(VBASE), .vdt=MK_VDT(2D)};
static const amed_db_vlist vlist7 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase7};
static const amed_db_mem mem248 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_count count1 = {.type=MK_TYPE(COUNT), .value=2};
static const amed_db_vlist vlist8 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase0};
static const amed_db_vlist vlist9 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase1};
static const amed_db_size size6 = {.size=256};
static const amed_db_mem mem249 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist10 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase2};
static const amed_db_vlist vlist11 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase3};
static const amed_db_mem mem250 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist12 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase4};
static const amed_db_vlist vlist13 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase5};
static const amed_db_mem mem251 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist14 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase6};
static const amed_db_vlist vlist15 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase7};
static const amed_db_mem mem252 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_count count2 = {.type=MK_TYPE(COUNT), .value=3};
static const amed_db_vlist vlist16 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase0};
static const amed_db_size size7 = {.size=192};
static const amed_db_mem mem253 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist17 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase1};
static const amed_db_size size8 = {.size=384};
static const amed_db_mem mem254 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist18 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase2};
static const amed_db_mem mem255 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist19 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase3};
static const amed_db_mem mem256 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist20 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase4};
static const amed_db_mem mem257 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist21 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase5};
static const amed_db_mem mem258 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist22 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase6};
static const amed_db_mem mem259 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist23 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase7};
static const amed_db_mem mem260 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_count count3 = {.type=MK_TYPE(COUNT), .value=4};
static const amed_db_vlist vlist24 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase0};
static const amed_db_vlist vlist25 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase1};
static const amed_db_size size9 = {.size=512};
static const amed_db_mem mem261 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist26 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase2};
static const amed_db_vlist vlist27 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase3};
static const amed_db_mem mem262 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist28 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase4};
static const amed_db_vlist vlist29 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase5};
static const amed_db_mem mem263 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist30 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase6};
static const amed_db_vlist vlist31 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase7};
static const amed_db_mem mem264 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff16 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=8};
static const amed_db_mem mem265 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff16, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff17 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=16};
static const amed_db_mem mem266 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff17, .post_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem267 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff16, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem268 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff17, .post_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem269 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff16, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem270 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff17, .post_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem271 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff16, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem272 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff17, .post_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_regoff regoff0 = {.encodedin=5, .has_encodedin=1, .nozr=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REGOFF)};
static const amed_db_mem mem273 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem274 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem275 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem276 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem277 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem278 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem279 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem280 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff18 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=32};
static const amed_db_mem mem281 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff18, .post_indexed=1, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem282 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff18, .post_indexed=1, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem283 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff18, .post_indexed=1, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem284 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff18, .post_indexed=1, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem285 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem286 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem287 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem288 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff19 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=24};
static const amed_db_mem mem289 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff19, .post_indexed=1, .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff20 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=48};
static const amed_db_mem mem290 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff20, .post_indexed=1, .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_mem mem291 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff19, .post_indexed=1, .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_mem mem292 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff20, .post_indexed=1, .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_mem mem293 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff19, .post_indexed=1, .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_mem mem294 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff20, .post_indexed=1, .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_mem mem295 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff19, .post_indexed=1, .read=1, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_mem mem296 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff20, .post_indexed=1, .read=1, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_mem mem297 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_mem mem298 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_mem mem299 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_mem mem300 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_mem mem301 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_mem mem302 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_mem mem303 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM)};
static const amed_db_mem mem304 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff21 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=64};
static const amed_db_mem mem305 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff21, .post_indexed=1, .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_mem mem306 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff21, .post_indexed=1, .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_mem mem307 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff21, .post_indexed=1, .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_mem mem308 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff21, .post_indexed=1, .read=1, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_mem mem309 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_mem mem310 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_mem mem311 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_mem mem312 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM)};
static const amed_db_idx idx13 = {.encodedin=124, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ebase ebase0 = {.idx=(void*)&idx13, .reg=(void*)&reg58, .type=MK_TYPE(EBASE), .vds=MK_VDS(B)};
static const amed_db_elist elist0 = {.count=(void*)&count0, .ebase=(void*)&ebase0, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem313 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_idx idx14 = {.encodedin=126, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ebase ebase1 = {.idx=(void*)&idx14, .reg=(void*)&reg60, .type=MK_TYPE(EBASE), .vds=MK_VDS(H)};
static const amed_db_elist elist1 = {.count=(void*)&count0, .ebase=(void*)&ebase1, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem314 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_idx idx15 = {.encodedin=128, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ebase ebase2 = {.idx=(void*)&idx15, .reg=(void*)&reg62, .type=MK_TYPE(EBASE), .vds=MK_VDS(S)};
static const amed_db_elist elist2 = {.count=(void*)&count0, .ebase=(void*)&ebase2, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem315 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_idx idx16 = {.encodedin=130, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ebase ebase3 = {.idx=(void*)&idx16, .reg=(void*)&reg64, .type=MK_TYPE(EBASE), .vds=MK_VDS(D)};
static const amed_db_elist elist3 = {.count=(void*)&count0, .ebase=(void*)&ebase3, .type=MK_TYPE(ELIST)};
static const amed_db_immoff immoff22 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=1};
static const amed_db_mem mem316 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff22, .post_indexed=1, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_mem mem317 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff23 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=2};
static const amed_db_mem mem318 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff23, .post_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem319 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff24 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=4};
static const amed_db_mem mem320 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff24, .post_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem321 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_elist elist4 = {.count=(void*)&count1, .ebase=(void*)&ebase0, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem322 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_elist elist5 = {.count=(void*)&count1, .ebase=(void*)&ebase1, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem323 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_elist elist6 = {.count=(void*)&count1, .ebase=(void*)&ebase2, .type=MK_TYPE(ELIST)};
static const amed_db_elist elist7 = {.count=(void*)&count1, .ebase=(void*)&ebase3, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem324 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff23, .post_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem325 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem326 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff24, .post_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem327 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_elist elist8 = {.count=(void*)&count2, .ebase=(void*)&ebase0, .type=MK_TYPE(ELIST)};
static const amed_db_size size10 = {.size=24};
static const amed_db_mem mem328 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size10, .type=MK_TYPE(MEM)};
static const amed_db_elist elist9 = {.count=(void*)&count2, .ebase=(void*)&ebase1, .type=MK_TYPE(ELIST)};
static const amed_db_size size11 = {.size=48};
static const amed_db_mem mem329 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size11, .type=MK_TYPE(MEM)};
static const amed_db_elist elist10 = {.count=(void*)&count2, .ebase=(void*)&ebase2, .type=MK_TYPE(ELIST)};
static const amed_db_size size12 = {.size=96};
static const amed_db_mem mem330 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size12, .type=MK_TYPE(MEM)};
static const amed_db_elist elist11 = {.count=(void*)&count2, .ebase=(void*)&ebase3, .type=MK_TYPE(ELIST)};
static const amed_db_immoff immoff25 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=3};
static const amed_db_mem mem331 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff25, .post_indexed=1, .read=1, .size=(void*)&size10, .type=MK_TYPE(MEM)};
static const amed_db_mem mem332 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size10, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff26 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=6};
static const amed_db_mem mem333 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff26, .post_indexed=1, .read=1, .size=(void*)&size11, .type=MK_TYPE(MEM)};
static const amed_db_mem mem334 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size11, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff27 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMMOFF), .value=12};
static const amed_db_mem mem335 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff27, .post_indexed=1, .read=1, .size=(void*)&size12, .type=MK_TYPE(MEM)};
static const amed_db_mem mem336 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size12, .type=MK_TYPE(MEM)};
static const amed_db_elist elist12 = {.count=(void*)&count3, .ebase=(void*)&ebase0, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem337 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_elist elist13 = {.count=(void*)&count3, .ebase=(void*)&ebase1, .type=MK_TYPE(ELIST)};
static const amed_db_elist elist14 = {.count=(void*)&count3, .ebase=(void*)&ebase2, .type=MK_TYPE(ELIST)};
static const amed_db_elist elist15 = {.count=(void*)&count3, .ebase=(void*)&ebase3, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem338 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff24, .post_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem339 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .read=1, .regoff=(void*)&regoff0, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_reg reg114 = {.datatype=MK_DATATYPE(I32), .encodedin=47, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem340 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff3, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg115 = {.datatype=MK_DATATYPE(I64), .encodedin=47, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem341 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff4, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_reg reg116 = {.datatype=MK_DATATYPE(I128), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD128), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg117 = {.datatype=MK_DATATYPE(I128), .encodedin=47, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD128), .type=MK_TYPE(REG), .write=1};
static const amed_db_immoff immoff28 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=49, .has_encodedin=1, .optional=1, .scale=16, .signpos=MK_SIGNPOS(imm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem342 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff28, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem343 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff5, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem344 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff6, .post_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff29 = {.datatype=MK_DATATYPE(S16), .encodedin=49, .has_encodedin=1, .scale=16, .signpos=MK_SIGNPOS(imm7<6>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem345 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff29, .post_indexed=1, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem346 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff5, .pre_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem347 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff6, .pre_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem348 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff29, .pre_indexed=1, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem349 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem350 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem351 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem352 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff7, .post_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem353 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem354 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem355 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem356 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff7, .pre_indexed=1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem357 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff12, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem358 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff8, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem359 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff9, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff30 = {.datatype=MK_DATATYPE(U16), .default_to=0, .encodedin=11, .has_encodedin=1, .optional=1, .scale=16, .symbol=MK_SYMBOL(pimm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem360 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff30, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_amount amount14 = {.datatype=MK_DATATYPE(I8), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter19 = {.amount=(void*)&amount14, .extend=(void*)&extend3, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh18 = {.reg=(void*)&reg2, .shifter=(void*)&shifter19, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem361 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoffsh=(void*)&regoffsh18, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh19 = {.reg=(void*)&reg5, .shifter=(void*)&shifter19, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem362 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoffsh=(void*)&regoffsh19, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_shifter shifter20 = {.amount=(void*)&amount14, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh20 = {.reg=(void*)&reg5, .shifter=(void*)&shifter20, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem363 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoffsh=(void*)&regoffsh20, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_amount amount15 = {.datatype=MK_DATATYPE(I16), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm5, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter21 = {.amount=(void*)&amount15, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh21 = {.reg=(void*)&reg2, .shifter=(void*)&shifter21, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem364 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .read=1, .regoffsh=(void*)&regoffsh21, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh22 = {.reg=(void*)&reg5, .shifter=(void*)&shifter21, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem365 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .read=1, .regoffsh=(void*)&regoffsh22, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem366 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .read=1, .regoffsh=(void*)&regoffsh0, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem367 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .read=1, .regoffsh=(void*)&regoffsh1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem368 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .read=1, .regoffsh=(void*)&regoffsh2, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem369 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .read=1, .regoffsh=(void*)&regoffsh3, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_amount amount16 = {.datatype=MK_DATATYPE(I128), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm8, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter22 = {.amount=(void*)&amount16, .extend=(void*)&extend2, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh23 = {.reg=(void*)&reg2, .shifter=(void*)&shifter22, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem370 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .read=1, .regoffsh=(void*)&regoffsh23, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh24 = {.reg=(void*)&reg5, .shifter=(void*)&shifter22, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem371 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .read=1, .regoffsh=(void*)&regoffsh24, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem372 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_mem mem373 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem374 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem375 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff1, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_ereg ereg21 = {.idx=(void*)&idx0, .reg=(void*)&reg69, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_imm imm49 = {.datatype=MK_DATATYPE(I8), .encodedin=91, .has_encodedin=1, .symbol=MK_SYMBOL(imm8), .type=MK_TYPE(IMM)};
static const amed_db_amount amount17 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(AMOUNT), .value=0};
static const amed_db_shifter shifter23 = {.amount=(void*)&amount17, .optional=1, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh5 = {.imm=(void*)&imm49, .shifter=(void*)&shifter23, .type=MK_TYPE(IMMSH)};
static const amed_db_amount amount18 = {.datatype=MK_DATATYPE(I32), .encodedin=51, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm3, .type=MK_TYPE(AMOUNT)};
static const amed_db_shift shift3 = {.type=MK_TYPE(SHIFT), .value=MK_SHIFT(MSL)};
static const amed_db_shifter shifter24 = {.amount=(void*)&amount18, .shift=(void*)&shift3, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh6 = {.imm=(void*)&imm31, .shifter=(void*)&shifter24, .type=MK_TYPE(IMMSH)};
static const amed_db_imm imm50 = {.datatype=MK_DATATYPE(I64), .encodedin=115, .has_encodedin=1, .symbol=MK_SYMBOL(advimm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg118 = {.datatype=MK_DATATYPE(I128), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg60 = {.reg=(void*)&reg118, .type=MK_TYPE(VREG), .vdt=MK_VDT(1Q)};
static const amed_db_vreg vreg61 = {.reg=(void*)&reg65, .type=MK_TYPE(VREG), .vdt=MK_VDT(1D)};
static const amed_db_vreg vreg62 = {.reg=(void*)&reg70, .type=MK_TYPE(VREG), .vdt=MK_VDT(1D)};
static const amed_db_imm imm51 = {.arg0=16, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_right), .type=MK_TYPE(IMM)};
static const amed_db_vreg vreg63 = {.reg=(void*)&reg89, .type=MK_TYPE(VREG), .vdt=MK_VDT(1D)};
static const amed_db_reg reg119 = {.datatype=MK_DATATYPE(S16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg120 = {.datatype=MK_DATATYPE(S32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg121 = {.datatype=MK_DATATYPE(S16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_reg reg122 = {.datatype=MK_DATATYPE(S32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg22 = {.idx=(void*)&idx0, .reg=(void*)&reg82, .type=MK_TYPE(EREG), .vdt=MK_VDT(4B)};
static const amed_db_reg reg123 = {.datatype=MK_DATATYPE(I128), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD128), .type=MK_TYPE(REG)};
static const amed_db_imm imm52 = {.arg0=64, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_left), .type=MK_TYPE(IMM)};
static const amed_db_imm imm53 = {.arg0=8, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_left), .type=MK_TYPE(IMM)};
static const amed_db_imm imm54 = {.arg0=16, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_left), .type=MK_TYPE(IMM)};
static const amed_db_imm imm55 = {.arg0=32, .datatype=MK_DATATYPE(U8), .encodedin=111, .has_encodedin=1, .symbol=MK_SYMBOL(shift_left), .type=MK_TYPE(IMM)};
static const amed_db_imm imm56 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMM), .value=8};
static const amed_db_imm imm57 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMM), .value=16};
static const amed_db_imm imm58 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMM), .value=32};
static const amed_db_reg reg124 = {.datatype=MK_DATATYPE(I32), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg64 = {.reg=(void*)&reg124, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_idx idx17 = {.encodedin=132, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg23 = {.idx=(void*)&idx17, .reg=(void*)&reg69, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_reg reg125 = {.datatype=MK_DATATYPE(S8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg126 = {.datatype=MK_DATATYPE(S16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg24 = {.idx=(void*)&idx1, .reg=(void*)&reg126, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_ereg ereg25 = {.idx=(void*)&idx0, .reg=(void*)&reg88, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_ereg ereg26 = {.idx=(void*)&idx2, .reg=(void*)&reg81, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_ereg ereg27 = {.idx=(void*)&idx3, .reg=(void*)&reg84, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_ereg ereg28 = {.idx=(void*)&idx4, .reg=(void*)&reg87, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_reg reg127 = {.datatype=MK_DATATYPE(S8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG)};
static const amed_db_reg reg128 = {.datatype=MK_DATATYPE(S8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG)};
static const amed_db_reg reg129 = {.datatype=MK_DATATYPE(S16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_reg reg130 = {.datatype=MK_DATATYPE(S32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_reg reg131 = {.datatype=MK_DATATYPE(U8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg132 = {.datatype=MK_DATATYPE(U16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_reg reg133 = {.datatype=MK_DATATYPE(U16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg134 = {.datatype=MK_DATATYPE(U32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_reg reg135 = {.datatype=MK_DATATYPE(U32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg136 = {.datatype=MK_DATATYPE(U64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg137 = {.datatype=MK_DATATYPE(U8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg65 = {.reg=(void*)&reg137, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_reg reg138 = {.datatype=MK_DATATYPE(U16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg66 = {.reg=(void*)&reg138, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_reg reg139 = {.datatype=MK_DATATYPE(U16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg67 = {.reg=(void*)&reg139, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_reg reg140 = {.datatype=MK_DATATYPE(U32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg68 = {.reg=(void*)&reg140, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_reg reg141 = {.datatype=MK_DATATYPE(U32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg69 = {.reg=(void*)&reg141, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_reg reg142 = {.datatype=MK_DATATYPE(U64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg70 = {.reg=(void*)&reg142, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_vreg vreg71 = {.reg=(void*)&reg137, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_vreg vreg72 = {.reg=(void*)&reg139, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_vreg vreg73 = {.reg=(void*)&reg141, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_reg reg143 = {.datatype=MK_DATATYPE(U8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG)};
static const amed_db_reg reg144 = {.datatype=MK_DATATYPE(U64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg145 = {.datatype=MK_DATATYPE(U8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg74 = {.reg=(void*)&reg145, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_vreg vreg75 = {.reg=(void*)&reg145, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_vreg vreg76 = {.reg=(void*)&reg138, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_vreg vreg77 = {.reg=(void*)&reg140, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_reg reg146 = {.datatype=MK_DATATYPE(U64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg78 = {.reg=(void*)&reg146, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_reg reg147 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase8 = {.reg=(void*)&reg147, .type=MK_TYPE(VBASE), .vdt=MK_VDT(8B)};
static const amed_db_vlist vlist32 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase8};
static const amed_db_mem mem376 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vbase vbase9 = {.reg=(void*)&reg147, .type=MK_TYPE(VBASE), .vdt=MK_VDT(16B)};
static const amed_db_vlist vlist33 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase9};
static const amed_db_mem mem377 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg148 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase10 = {.reg=(void*)&reg148, .type=MK_TYPE(VBASE), .vdt=MK_VDT(4H)};
static const amed_db_vlist vlist34 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase10};
static const amed_db_mem mem378 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vbase vbase11 = {.reg=(void*)&reg148, .type=MK_TYPE(VBASE), .vdt=MK_VDT(8H)};
static const amed_db_vlist vlist35 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase11};
static const amed_db_mem mem379 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg149 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase12 = {.reg=(void*)&reg149, .type=MK_TYPE(VBASE), .vdt=MK_VDT(2S)};
static const amed_db_vlist vlist36 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase12};
static const amed_db_mem mem380 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vbase vbase13 = {.reg=(void*)&reg149, .type=MK_TYPE(VBASE), .vdt=MK_VDT(4S)};
static const amed_db_vlist vlist37 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase13};
static const amed_db_mem mem381 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg150 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase14 = {.reg=(void*)&reg150, .type=MK_TYPE(VBASE), .vdt=MK_VDT(1D)};
static const amed_db_vlist vlist38 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase14};
static const amed_db_vbase vbase15 = {.reg=(void*)&reg150, .type=MK_TYPE(VBASE), .vdt=MK_VDT(2D)};
static const amed_db_vlist vlist39 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase15};
static const amed_db_mem mem382 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist40 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase8};
static const amed_db_vlist vlist41 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase9};
static const amed_db_mem mem383 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist42 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase10};
static const amed_db_vlist vlist43 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase11};
static const amed_db_mem mem384 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist44 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase12};
static const amed_db_vlist vlist45 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase13};
static const amed_db_mem mem385 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist46 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase14};
static const amed_db_vlist vlist47 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase15};
static const amed_db_mem mem386 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist48 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase8};
static const amed_db_mem mem387 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist49 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase9};
static const amed_db_mem mem388 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist50 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase10};
static const amed_db_mem mem389 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist51 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase11};
static const amed_db_mem mem390 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist52 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase12};
static const amed_db_mem mem391 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist53 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase13};
static const amed_db_mem mem392 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist54 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase14};
static const amed_db_mem mem393 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist55 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase15};
static const amed_db_mem mem394 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist56 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase8};
static const amed_db_vlist vlist57 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase9};
static const amed_db_mem mem395 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist58 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase10};
static const amed_db_vlist vlist59 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase11};
static const amed_db_mem mem396 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist60 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase12};
static const amed_db_vlist vlist61 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase13};
static const amed_db_mem mem397 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist62 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase14};
static const amed_db_vlist vlist63 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase15};
static const amed_db_mem mem398 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem399 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff16, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem400 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff17, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem401 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff16, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem402 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff17, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem403 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff16, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem404 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff17, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem405 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff16, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem406 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff17, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem407 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem408 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem409 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem410 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem411 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem412 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem413 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem414 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem415 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff18, .post_indexed=1, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem416 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff18, .post_indexed=1, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem417 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff18, .post_indexed=1, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem418 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff18, .post_indexed=1, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem419 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem420 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem421 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem422 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem423 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff19, .post_indexed=1, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem424 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff20, .post_indexed=1, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem425 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff19, .post_indexed=1, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem426 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff20, .post_indexed=1, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem427 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff19, .post_indexed=1, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem428 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff20, .post_indexed=1, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem429 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff19, .post_indexed=1, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem430 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff20, .post_indexed=1, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem431 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem432 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem433 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem434 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem435 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem436 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem437 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem438 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size8, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem439 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff21, .post_indexed=1, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem440 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff21, .post_indexed=1, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem441 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff21, .post_indexed=1, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem442 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff21, .post_indexed=1, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem443 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem444 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem445 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem446 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size9, .type=MK_TYPE(MEM), .write=1};
static const amed_db_ebase ebase4 = {.idx=(void*)&idx13, .reg=(void*)&reg147, .type=MK_TYPE(EBASE), .vds=MK_VDS(B)};
static const amed_db_elist elist16 = {.count=(void*)&count0, .ebase=(void*)&ebase4, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem447 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_ebase ebase5 = {.idx=(void*)&idx14, .reg=(void*)&reg148, .type=MK_TYPE(EBASE), .vds=MK_VDS(H)};
static const amed_db_elist elist17 = {.count=(void*)&count0, .ebase=(void*)&ebase5, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem448 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_ebase ebase6 = {.idx=(void*)&idx15, .reg=(void*)&reg149, .type=MK_TYPE(EBASE), .vds=MK_VDS(S)};
static const amed_db_elist elist18 = {.count=(void*)&count0, .ebase=(void*)&ebase6, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem449 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_ebase ebase7 = {.idx=(void*)&idx16, .reg=(void*)&reg150, .type=MK_TYPE(EBASE), .vds=MK_VDS(D)};
static const amed_db_elist elist19 = {.count=(void*)&count0, .ebase=(void*)&ebase7, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem450 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff22, .post_indexed=1, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem451 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem452 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff23, .post_indexed=1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem453 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem454 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff24, .post_indexed=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem455 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist20 = {.count=(void*)&count1, .ebase=(void*)&ebase4, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem456 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist21 = {.count=(void*)&count1, .ebase=(void*)&ebase5, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem457 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist22 = {.count=(void*)&count1, .ebase=(void*)&ebase6, .type=MK_TYPE(ELIST)};
static const amed_db_elist elist23 = {.count=(void*)&count1, .ebase=(void*)&ebase7, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem458 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff23, .post_indexed=1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem459 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem460 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff24, .post_indexed=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem461 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist24 = {.count=(void*)&count2, .ebase=(void*)&ebase4, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem462 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size10, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist25 = {.count=(void*)&count2, .ebase=(void*)&ebase5, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem463 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size11, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist26 = {.count=(void*)&count2, .ebase=(void*)&ebase6, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem464 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size12, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist27 = {.count=(void*)&count2, .ebase=(void*)&ebase7, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem465 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff25, .post_indexed=1, .size=(void*)&size10, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem466 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size10, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem467 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff26, .post_indexed=1, .size=(void*)&size11, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem468 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size11, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem469 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff27, .post_indexed=1, .size=(void*)&size12, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem470 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size12, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist28 = {.count=(void*)&count3, .ebase=(void*)&ebase4, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem471 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_elist elist29 = {.count=(void*)&count3, .ebase=(void*)&ebase5, .type=MK_TYPE(ELIST)};
static const amed_db_elist elist30 = {.count=(void*)&count3, .ebase=(void*)&ebase6, .type=MK_TYPE(ELIST)};
static const amed_db_elist elist31 = {.count=(void*)&count3, .ebase=(void*)&ebase7, .type=MK_TYPE(ELIST)};
static const amed_db_mem mem472 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff24, .post_indexed=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem473 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .post_indexed=1, .regoff=(void*)&regoff0, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg151 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_reg reg152 = {.datatype=MK_DATATYPE(I32), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_mem mem474 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff3, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg153 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg154 = {.datatype=MK_DATATYPE(I64), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_mem mem475 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff4, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg155 = {.datatype=MK_DATATYPE(I128), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD128), .type=MK_TYPE(REG)};
static const amed_db_reg reg156 = {.datatype=MK_DATATYPE(I128), .encodedin=47, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD128), .type=MK_TYPE(REG)};
static const amed_db_mem mem476 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff28, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem477 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff5, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem478 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff6, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem479 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff29, .post_indexed=1, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem480 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff5, .pre_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem481 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff6, .pre_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem482 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff29, .pre_indexed=1, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg157 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG)};
static const amed_db_reg reg158 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_mem mem483 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem484 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem485 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem486 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff7, .post_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem487 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem488 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem489 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem490 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff7, .pre_indexed=1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem491 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff12, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem492 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff8, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem493 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff9, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem494 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff30, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem495 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoffsh=(void*)&regoffsh18, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem496 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoffsh=(void*)&regoffsh19, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem497 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoffsh=(void*)&regoffsh20, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem498 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .regoffsh=(void*)&regoffsh21, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem499 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .regoffsh=(void*)&regoffsh22, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem500 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .regoffsh=(void*)&regoffsh0, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem501 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .regoffsh=(void*)&regoffsh1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem502 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .regoffsh=(void*)&regoffsh2, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem503 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .regoffsh=(void*)&regoffsh3, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem504 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .regoffsh=(void*)&regoffsh23, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem505 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .regoffsh=(void*)&regoffsh24, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem506 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F16), .immoff=(void*)&immoff1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem507 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F32), .immoff=(void*)&immoff1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem508 = {.base=(void*)&base0, .datatype=MK_DATATYPE(F64), .immoff=(void*)&immoff1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem509 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I128), .immoff=(void*)&immoff1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg159 = {.datatype=MK_DATATYPE(U8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg29 = {.idx=(void*)&idx0, .reg=(void*)&reg159, .type=MK_TYPE(EREG), .vdt=MK_VDT(4B)};
static const amed_db_vbase vbase16 = {.reg=(void*)&reg59, .type=MK_TYPE(VBASE), .vdt=MK_VDT(16B)};
static const amed_db_vlist vlist64 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase16};
static const amed_db_vlist vlist65 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase16};
static const amed_db_vlist vlist66 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase16};
static const amed_db_vlist vlist67 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase16};
static const amed_db_vreg vreg79 = {.reg=(void*)&reg159, .type=MK_TYPE(VREG), .vdt=MK_VDT(8B)};
static const amed_db_vreg vreg80 = {.reg=(void*)&reg159, .type=MK_TYPE(VREG), .vdt=MK_VDT(16B)};
static const amed_db_reg reg160 = {.datatype=MK_DATATYPE(U16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg81 = {.reg=(void*)&reg160, .type=MK_TYPE(VREG), .vdt=MK_VDT(4H)};
static const amed_db_vreg vreg82 = {.reg=(void*)&reg160, .type=MK_TYPE(VREG), .vdt=MK_VDT(8H)};
static const amed_db_reg reg161 = {.datatype=MK_DATATYPE(U32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg83 = {.reg=(void*)&reg161, .type=MK_TYPE(VREG), .vdt=MK_VDT(2S)};
static const amed_db_vreg vreg84 = {.reg=(void*)&reg161, .type=MK_TYPE(VREG), .vdt=MK_VDT(4S)};
static const amed_db_vreg vreg85 = {.reg=(void*)&reg146, .type=MK_TYPE(VREG), .vdt=MK_VDT(1D)};
static const amed_db_reg reg162 = {.datatype=MK_DATATYPE(U16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg30 = {.idx=(void*)&idx1, .reg=(void*)&reg162, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_ereg ereg31 = {.idx=(void*)&idx0, .reg=(void*)&reg161, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_ereg ereg32 = {.idx=(void*)&idx2, .reg=(void*)&reg145, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_ereg ereg33 = {.idx=(void*)&idx3, .reg=(void*)&reg138, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_ereg ereg34 = {.idx=(void*)&idx4, .reg=(void*)&reg140, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_ereg ereg35 = {.idx=(void*)&idx5, .reg=(void*)&reg142, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_reg reg163 = {.datatype=MK_DATATYPE(U8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG)};
static const amed_db_reg reg164 = {.datatype=MK_DATATYPE(U16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_reg reg165 = {.datatype=MK_DATATYPE(U32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG)};
static const amed_db_reg reg166 = {.datatype=MK_DATATYPE(U64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG)};
static const amed_db_reg reg167 = {.datatype=MK_DATATYPE(U64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VECREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg86 = {.reg=(void*)&reg167, .type=MK_TYPE(VREG), .vdt=MK_VDT(2D)};
static const amed_db_imm imm59 = {.datatype=MK_DATATYPE(I64), .encodedin=15, .has_encodedin=1, .symbol=MK_SYMBOL(imm6), .type=MK_TYPE(IMM)};
static const amed_db_reg reg168 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg87 = {.reg=(void*)&reg168, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_preg preg0 = {.encodedin=7, .has_encodedin=1, .merging=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(PREG)};
static const amed_db_reg reg169 = {.datatype=MK_DATATYPE(I8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg88 = {.reg=(void*)&reg169, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg170 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg89 = {.reg=(void*)&reg170, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg171 = {.datatype=MK_DATATYPE(I16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg90 = {.reg=(void*)&reg171, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg172 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg91 = {.reg=(void*)&reg172, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg173 = {.datatype=MK_DATATYPE(I32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg92 = {.reg=(void*)&reg173, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg174 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg93 = {.reg=(void*)&reg174, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg175 = {.datatype=MK_DATATYPE(I64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg94 = {.reg=(void*)&reg175, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg176 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg95 = {.reg=(void*)&reg176, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg177 = {.datatype=MK_DATATYPE(I32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg96 = {.reg=(void*)&reg177, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg178 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg97 = {.reg=(void*)&reg178, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg179 = {.datatype=MK_DATATYPE(I64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg98 = {.reg=(void*)&reg179, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg180 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg99 = {.reg=(void*)&reg180, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg181 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg100 = {.reg=(void*)&reg181, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_imm imm60 = {.datatype=MK_DATATYPE(U8), .encodedin=134, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_shifter shifter25 = {.default_to=MK_DEFAULT_TO(LSL #0), .encodedin=93, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(shifter), .table=(void*)&tbl_shifter1, .type=MK_TYPE(SHIFTER)};
static const amed_db_immsh immsh7 = {.imm=(void*)&imm60, .shifter=(void*)&shifter25, .type=MK_TYPE(IMMSH)};
static const amed_db_reg reg182 = {.datatype=MK_DATATYPE(I8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg101 = {.reg=(void*)&reg182, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg183 = {.datatype=MK_DATATYPE(I16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg102 = {.reg=(void*)&reg183, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_imm imm61 = {.datatype=MK_DATATYPE(S8), .encodedin=136, .has_encodedin=1, .signpos=MK_SIGNPOS(imm6<5>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_size size13 = {.esize=32, .size=32};
static const amed_db_reg reg184 = {.encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase17 = {.reg=(void*)&reg184, .type=MK_TYPE(VBASE), .vds=MK_VDS(S)};
static const amed_db_amount amount19 = {.datatype=MK_DATATYPE(I32), .encodedin=138, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm9, .type=MK_TYPE(AMOUNT)};
static const amed_db_extend extend4 = {.encodedin=138, .has_encodedin=1, .symbol=MK_SYMBOL(mod), .table=(void*)&tbl_extend4, .type=MK_TYPE(EXTEND)};
static const amed_db_shifter shifter26 = {.amount=(void*)&amount19, .extend=(void*)&extend4, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_reg reg185 = {.encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg103 = {.reg=(void*)&reg185, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_vregoffsh vregoffsh0 = {.shifter=(void*)&shifter26, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem510 = {.datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17, .vregoffsh=(void*)&vregoffsh0};
static const amed_db_size size14 = {.esize=64, .size=64};
static const amed_db_vbase vbase18 = {.reg=(void*)&reg184, .type=MK_TYPE(VBASE), .vds=MK_VDS(D)};
static const amed_db_amount amount20 = {.datatype=MK_DATATYPE(I64), .encodedin=138, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .table=(void*)&tbl_imm9, .type=MK_TYPE(AMOUNT)};
static const amed_db_shifter shifter27 = {.amount=(void*)&amount20, .extend=(void*)&extend4, .optional=1, .type=MK_TYPE(SHIFTER)};
static const amed_db_vreg vreg104 = {.reg=(void*)&reg185, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_vregoffsh vregoffsh1 = {.shifter=(void*)&shifter27, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem511 = {.datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .vregoffsh=(void*)&vregoffsh1};
static const amed_db_extend extend5 = {.type=MK_TYPE(EXTEND), .value=MK_EXTEND(SXTW)};
static const amed_db_shifter shifter28 = {.amount=(void*)&amount20, .extend=(void*)&extend5, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh2 = {.shifter=(void*)&shifter28, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem512 = {.datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .vregoffsh=(void*)&vregoffsh2};
static const amed_db_extend extend6 = {.type=MK_TYPE(EXTEND), .value=MK_EXTEND(UXTW)};
static const amed_db_shifter shifter29 = {.amount=(void*)&amount20, .extend=(void*)&extend6, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh3 = {.shifter=(void*)&shifter29, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem513 = {.datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .vregoffsh=(void*)&vregoffsh3};
static const amed_db_reg reg186 = {.datatype=MK_DATATYPE(I8), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg105 = {.reg=(void*)&reg186, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_preg preg1 = {.encodedin=21, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(PREG), .zeroing=1};
static const amed_db_reg reg187 = {.datatype=MK_DATATYPE(I8), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg106 = {.reg=(void*)&reg187, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg188 = {.datatype=MK_DATATYPE(I8), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg107 = {.reg=(void*)&reg188, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_imm imm62 = {.datatype=MK_DATATYPE(I32), .encodedin=142, .has_encodedin=1, .symbol=MK_SYMBOL(aimm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm63 = {.datatype=MK_DATATYPE(I16), .encodedin=142, .has_encodedin=1, .symbol=MK_SYMBOL(aimm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm64 = {.datatype=MK_DATATYPE(I8), .encodedin=142, .has_encodedin=1, .symbol=MK_SYMBOL(aimm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm65 = {.datatype=MK_DATATYPE(I64), .encodedin=142, .has_encodedin=1, .symbol=MK_SYMBOL(aimm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg189 = {.encodedin=7, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_imm imm66 = {.datatype=MK_DATATYPE(U8), .encodedin=144, .has_encodedin=1, .symbol=MK_SYMBOL(const), .type=MK_TYPE(IMM)};
static const amed_db_imm imm67 = {.datatype=MK_DATATYPE(U8), .encodedin=146, .has_encodedin=1, .symbol=MK_SYMBOL(const), .type=MK_TYPE(IMM)};
static const amed_db_reg reg190 = {.datatype=MK_DATATYPE(I16), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg36 = {.idx=(void*)&idx4, .reg=(void*)&reg190, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_idx idx18 = {.encodedin=148, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg37 = {.idx=(void*)&idx18, .reg=(void*)&reg190, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_preg preg2 = {.encodedin=21, .has_encodedin=1, .merging=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(PREG)};
static const amed_db_reg reg191 = {.datatype=MK_DATATYPE(I8), .encodedin=37, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg108 = {.reg=(void*)&reg191, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_imm imm68 = {.datatype=MK_DATATYPE(I8), .encodedin=150, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm69 = {.datatype=MK_DATATYPE(I16), .encodedin=150, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm70 = {.datatype=MK_DATATYPE(I32), .encodedin=150, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm71 = {.datatype=MK_DATATYPE(I64), .encodedin=150, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm72 = {.datatype=MK_DATATYPE(I8), .encodedin=138, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm73 = {.datatype=MK_DATATYPE(I16), .encodedin=138, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_reg reg192 = {.datatype=MK_DATATYPE(I8), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg38 = {.idx=(void*)&idx4, .reg=(void*)&reg192, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_reg reg193 = {.datatype=MK_DATATYPE(I16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg39 = {.idx=(void*)&idx5, .reg=(void*)&reg193, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg194 = {.encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg195 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg196 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg197 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg198 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG), .write=1};
static const amed_db_imm imm74 = {.datatype=MK_DATATYPE(I32), .encodedin=138, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm75 = {.datatype=MK_DATATYPE(I64), .encodedin=138, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_reg reg199 = {.datatype=MK_DATATYPE(I32), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg40 = {.idx=(void*)&idx5, .reg=(void*)&reg199, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_preg preg3 = {.encodedin=7, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(PREG), .zeroing=1};
static const amed_db_imm imm76 = {.datatype=MK_DATATYPE(S8), .encodedin=5, .has_encodedin=1, .signpos=MK_SIGNPOS(imm5<4>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg200 = {.datatype=MK_DATATYPE(I16), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg109 = {.reg=(void*)&reg200, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg201 = {.datatype=MK_DATATYPE(I32), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg110 = {.reg=(void*)&reg201, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg202 = {.datatype=MK_DATATYPE(I64), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg111 = {.reg=(void*)&reg202, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_imm imm77 = {.datatype=MK_DATATYPE(U8), .encodedin=152, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_pattern pattern0 = {.default_to=MK_DEFAULT_TO(ALL), .encodedin=3, .has_encodedin=1, .symbol=MK_SYMBOL(pattern), .table=(void*)&tbl_pattern, .type=MK_TYPE(PATTERN)};
static const amed_db_amount amount21 = {.datatype=MK_DATATYPE(U8), .default_to=1, .encodedin=89, .has_encodedin=1, .symbol=MK_SYMBOL(amount), .type=MK_TYPE(AMOUNT)};
static const amed_db_shift shift4 = {.type=MK_TYPE(SHIFT), .value=MK_SHIFT(MUL)};
static const amed_db_shifter shifter30 = {.amount=(void*)&amount21, .optional=1, .shift=(void*)&shift4, .type=MK_TYPE(SHIFTER)};
static const amed_db_patternsh patternsh0 = {.optional=1, .pattern=(void*)&pattern0, .shifter=(void*)&shifter30, .type=MK_TYPE(PATTERNSH)};
static const amed_db_reg reg203 = {.encodedin=21, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg204 = {.datatype=MK_DATATYPE(I16), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg112 = {.reg=(void*)&reg204, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg205 = {.datatype=MK_DATATYPE(I32), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg113 = {.reg=(void*)&reg205, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg206 = {.datatype=MK_DATATYPE(I64), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg114 = {.reg=(void*)&reg206, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_preg preg4 = {.encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(PREG), .zeroing=1};
static const amed_db_imm imm78 = {.datatype=MK_DATATYPE(S8), .encodedin=134, .has_encodedin=1, .signpos=MK_SIGNPOS(imm8<7>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_immsh immsh8 = {.imm=(void*)&imm78, .shifter=(void*)&shifter25, .type=MK_TYPE(IMMSH)};
static const amed_db_preg preg5 = {.encodedin=89, .has_encodedin=1, .merging=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(PREG)};
static const amed_db_reg reg207 = {.datatype=MK_DATATYPE(I8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD8), .type=MK_TYPE(REG)};
static const amed_db_reg reg208 = {.datatype=MK_DATATYPE(I16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG)};
static const amed_db_idx idx19 = {.encodedin=146, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg41 = {.idx=(void*)&idx19, .reg=(void*)&reg169, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_ereg ereg42 = {.idx=(void*)&idx19, .reg=(void*)&reg171, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_ereg ereg43 = {.idx=(void*)&idx19, .reg=(void*)&reg173, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_ereg ereg44 = {.idx=(void*)&idx19, .reg=(void*)&reg175, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_reg reg209 = {.datatype=MK_DATATYPE(I128), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg115 = {.reg=(void*)&reg209, .type=MK_TYPE(VREG), .vds=MK_VDS(Q)};
static const amed_db_reg reg210 = {.datatype=MK_DATATYPE(I128), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg45 = {.idx=(void*)&idx19, .reg=(void*)&reg210, .type=MK_TYPE(EREG), .vds=MK_VDS(Q)};
static const amed_db_vbase vbase19 = {.reg=(void*)&reg169, .type=MK_TYPE(VBASE), .vds=MK_VDS(B)};
static const amed_db_vlist vlist68 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase19};
static const amed_db_imm imm79 = {.datatype=MK_DATATYPE(U8), .encodedin=154, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_reg reg211 = {.datatype=MK_DATATYPE(F16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg116 = {.reg=(void*)&reg211, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg212 = {.datatype=MK_DATATYPE(F16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg117 = {.reg=(void*)&reg212, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg213 = {.datatype=MK_DATATYPE(F32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg118 = {.reg=(void*)&reg213, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg214 = {.datatype=MK_DATATYPE(F32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg119 = {.reg=(void*)&reg214, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg215 = {.datatype=MK_DATATYPE(F64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg120 = {.reg=(void*)&reg215, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg216 = {.datatype=MK_DATATYPE(F64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg121 = {.reg=(void*)&reg216, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg217 = {.datatype=MK_DATATYPE(F16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg122 = {.reg=(void*)&reg217, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg218 = {.datatype=MK_DATATYPE(F32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg123 = {.reg=(void*)&reg218, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg219 = {.datatype=MK_DATATYPE(F64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg124 = {.reg=(void*)&reg219, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg220 = {.datatype=MK_DATATYPE(F16), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg125 = {.reg=(void*)&reg220, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg221 = {.datatype=MK_DATATYPE(F16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg126 = {.reg=(void*)&reg221, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg222 = {.datatype=MK_DATATYPE(F32), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg127 = {.reg=(void*)&reg222, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg223 = {.datatype=MK_DATATYPE(F32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg128 = {.reg=(void*)&reg223, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg224 = {.datatype=MK_DATATYPE(F64), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg129 = {.reg=(void*)&reg224, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg225 = {.datatype=MK_DATATYPE(F64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg130 = {.reg=(void*)&reg225, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_fpimm fpimm5 = {.datatype=MK_DATATYPE(F16), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm0, .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm6 = {.datatype=MK_DATATYPE(F32), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm0, .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm7 = {.datatype=MK_DATATYPE(F64), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm0, .type=MK_TYPE(FPIMM)};
static const amed_db_reg reg226 = {.datatype=MK_DATATYPE(F16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD16), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg227 = {.datatype=MK_DATATYPE(F32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg228 = {.datatype=MK_DATATYPE(F64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIMD64), .type=MK_TYPE(REG), .write=1};
static const amed_db_imm imm80 = {.datatype=MK_DATATYPE(I16), .encodedin=158, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm81 = {.datatype=MK_DATATYPE(I32), .encodedin=158, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm82 = {.datatype=MK_DATATYPE(I64), .encodedin=158, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm4, .type=MK_TYPE(IMM)};
static const amed_db_imm imm83 = {.datatype=MK_DATATYPE(I16), .encodedin=95, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm84 = {.datatype=MK_DATATYPE(I32), .encodedin=95, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_imm imm85 = {.datatype=MK_DATATYPE(I64), .encodedin=95, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_imm0, .type=MK_TYPE(IMM)};
static const amed_db_reg reg229 = {.datatype=MK_DATATYPE(F16), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg46 = {.idx=(void*)&idx4, .reg=(void*)&reg229, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg230 = {.datatype=MK_DATATYPE(F32), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg47 = {.idx=(void*)&idx5, .reg=(void*)&reg230, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_imm imm86 = {.datatype=MK_DATATYPE(I16), .encodedin=134, .has_encodedin=1, .symbol=MK_SYMBOL(const), .type=MK_TYPE(IMM)};
static const amed_db_imm imm87 = {.datatype=MK_DATATYPE(I32), .encodedin=134, .has_encodedin=1, .symbol=MK_SYMBOL(const), .type=MK_TYPE(IMM)};
static const amed_db_imm imm88 = {.datatype=MK_DATATYPE(I64), .encodedin=134, .has_encodedin=1, .symbol=MK_SYMBOL(const), .type=MK_TYPE(IMM)};
static const amed_db_fpimm fpimm8 = {.datatype=MK_DATATYPE(F16), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm1, .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm9 = {.datatype=MK_DATATYPE(F32), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm1, .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm10 = {.datatype=MK_DATATYPE(F64), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm1, .type=MK_TYPE(FPIMM)};
static const amed_db_idx idx20 = {.encodedin=160, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_ereg ereg48 = {.idx=(void*)&idx20, .reg=(void*)&reg229, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg231 = {.datatype=MK_DATATYPE(F32), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg49 = {.idx=(void*)&idx4, .reg=(void*)&reg231, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_reg reg232 = {.datatype=MK_DATATYPE(F64), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg50 = {.idx=(void*)&idx5, .reg=(void*)&reg232, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_ereg ereg51 = {.idx=(void*)&idx18, .reg=(void*)&reg229, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_fpimm fpimm11 = {.datatype=MK_DATATYPE(F16), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm2, .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm12 = {.datatype=MK_DATATYPE(F32), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm2, .type=MK_TYPE(FPIMM)};
static const amed_db_fpimm fpimm13 = {.datatype=MK_DATATYPE(F64), .encodedin=156, .has_encodedin=1, .symbol=MK_SYMBOL(const), .table=(void*)&tbl_fpimm2, .type=MK_TYPE(FPIMM)};
static const amed_db_imm imm89 = {.datatype=MK_DATATYPE(U8), .encodedin=65, .has_encodedin=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_imm imm90 = {.datatype=MK_DATATYPE(S8), .encodedin=3, .has_encodedin=1, .signpos=MK_SIGNPOS(imm5<4>), .symbol=MK_SYMBOL(imm1), .type=MK_TYPE(IMM)};
static const amed_db_imm imm91 = {.datatype=MK_DATATYPE(S8), .encodedin=5, .has_encodedin=1, .signpos=MK_SIGNPOS(imm5b<4>), .symbol=MK_SYMBOL(imm2), .type=MK_TYPE(IMM)};
static const amed_db_imm imm92 = {.datatype=MK_DATATYPE(S8), .encodedin=3, .has_encodedin=1, .signpos=MK_SIGNPOS(imm5<4>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_vbase vbase20 = {.reg=(void*)&reg172, .type=MK_TYPE(VBASE), .vds=MK_VDS(S)};
static const amed_db_vlist vlist69 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase20};
static const amed_db_immoff immoff31 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=5, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_size size15 = {.esize=32, .size=8};
static const amed_db_mem mem514 = {.datatype=MK_DATATYPE(U8), .immoff=(void*)&immoff31, .read=1, .size=(void*)&size15, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_vbase vbase21 = {.reg=(void*)&reg174, .type=MK_TYPE(VBASE), .vds=MK_VDS(D)};
static const amed_db_vlist vlist70 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase21};
static const amed_db_size size16 = {.esize=64, .size=8};
static const amed_db_mem mem515 = {.datatype=MK_DATATYPE(U8), .immoff=(void*)&immoff31, .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_vbase vbase22 = {.reg=(void*)&reg168, .type=MK_TYPE(VBASE), .vds=MK_VDS(B)};
static const amed_db_vlist vlist71 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase22};
static const amed_db_imm imm93 = {.datatype=MK_DATATYPE(S8), .default_to=0, .encodedin=89, .has_encodedin=1, .signpos=MK_SIGNPOS(imm4<3>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_amount amount22 = {.datatype=MK_DATATYPE(U32), .type=MK_TYPE(AMOUNT), .value=MK_AMOUNT(VL)};
static const amed_db_shifter shifter31 = {.amount=(void*)&amount22, .shift=(void*)&shift4, .type=MK_TYPE(SHIFTER)};
static const amed_db_immoffsh immoffsh0 = {.imm=(void*)&imm93, .optional=1, .shifter=(void*)&shifter31, .type=MK_TYPE(IMMOFFSH)};
static const amed_db_size size17 = {.esize=8, .size=8};
static const amed_db_mem mem516 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase23 = {.reg=(void*)&reg170, .type=MK_TYPE(VBASE), .vds=MK_VDS(H)};
static const amed_db_vlist vlist72 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase23};
static const amed_db_size size18 = {.esize=16, .size=8};
static const amed_db_mem mem517 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size18, .type=MK_TYPE(MEM)};
static const amed_db_mem mem518 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size15, .type=MK_TYPE(MEM)};
static const amed_db_mem mem519 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM)};
static const amed_db_regoff regoff1 = {.encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REGOFF)};
static const amed_db_mem mem520 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size17, .type=MK_TYPE(MEM)};
static const amed_db_mem mem521 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size18, .type=MK_TYPE(MEM)};
static const amed_db_mem mem522 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size15, .type=MK_TYPE(MEM)};
static const amed_db_mem mem523 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size16, .type=MK_TYPE(MEM)};
static const amed_db_extend extend7 = {.encodedin=13, .has_encodedin=1, .symbol=MK_SYMBOL(mod), .table=(void*)&tbl_extend5, .type=MK_TYPE(EXTEND)};
static const amed_db_shifter shifter32 = {.extend=(void*)&extend7, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh4 = {.shifter=(void*)&shifter32, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem524 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_vregoffsh vregoffsh5 = {.shifter=(void*)&shifter32, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem525 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .size=(void*)&size15, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh5};
static const amed_db_vregoff vregoff0 = {.reg=(void*)&reg185, .type=MK_TYPE(VREGOFF), .vds=MK_VDS(D)};
static const amed_db_mem mem526 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_immoff immoff32 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=5, .has_encodedin=1, .optional=1, .scale=8, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem527 = {.datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff32, .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem528 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM)};
static const amed_db_amount amount23 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(AMOUNT), .value=3};
static const amed_db_shifter shifter33 = {.amount=(void*)&amount23, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh25 = {.reg=(void*)&reg5, .shifter=(void*)&shifter33, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem529 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh25, .size=(void*)&size14, .type=MK_TYPE(MEM)};
static const amed_db_shifter shifter34 = {.amount=(void*)&amount23, .extend=(void*)&extend7, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh6 = {.shifter=(void*)&shifter34, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem530 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh6};
static const amed_db_mem mem531 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_vregoffsh vregoffsh7 = {.shifter=(void*)&shifter33, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem532 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh7};
static const amed_db_mem mem533 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_immoff immoff33 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=5, .has_encodedin=1, .optional=1, .scale=2, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_size size19 = {.esize=32, .size=16};
static const amed_db_mem mem534 = {.datatype=MK_DATATYPE(U16), .immoff=(void*)&immoff33, .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_size size20 = {.esize=64, .size=16};
static const amed_db_mem mem535 = {.datatype=MK_DATATYPE(U16), .immoff=(void*)&immoff33, .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_size size21 = {.esize=16, .size=16};
static const amed_db_mem mem536 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM)};
static const amed_db_mem mem537 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM)};
static const amed_db_mem mem538 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM)};
static const amed_db_amount amount24 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(AMOUNT), .value=1};
static const amed_db_shifter shifter35 = {.amount=(void*)&amount24, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh26 = {.reg=(void*)&reg5, .shifter=(void*)&shifter35, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem539 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size21, .type=MK_TYPE(MEM)};
static const amed_db_mem mem540 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size19, .type=MK_TYPE(MEM)};
static const amed_db_mem mem541 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size20, .type=MK_TYPE(MEM)};
static const amed_db_shifter shifter36 = {.amount=(void*)&amount24, .extend=(void*)&extend7, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh8 = {.shifter=(void*)&shifter36, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem542 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh8};
static const amed_db_vregoffsh vregoffsh9 = {.shifter=(void*)&shifter36, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem543 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh9};
static const amed_db_mem mem544 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_mem mem545 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh5};
static const amed_db_vregoffsh vregoffsh10 = {.shifter=(void*)&shifter35, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem546 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh10};
static const amed_db_mem mem547 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_immoff immoff34 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=19, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem548 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .immoff=(void*)&immoff34, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff35 = {.datatype=MK_DATATYPE(U16), .default_to=0, .encodedin=19, .has_encodedin=1, .optional=1, .scale=8, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem549 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff35, .read=1, .size=(void*)&size1, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff36 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=19, .has_encodedin=1, .optional=1, .scale=2, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem550 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .immoff=(void*)&immoff36, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff37 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=89, .has_encodedin=1, .optional=1, .scale=32, .signpos=MK_SIGNPOS(imm4<3>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem551 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff37, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem552 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem553 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff37, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem554 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh25, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem555 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff37, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem556 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_mem mem557 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff37, .read=1, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_amount amount25 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(AMOUNT), .value=2};
static const amed_db_shifter shifter37 = {.amount=(void*)&amount25, .shift=(void*)&shift2, .type=MK_TYPE(SHIFTER)};
static const amed_db_regoffsh regoffsh27 = {.reg=(void*)&reg5, .shifter=(void*)&shifter37, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem558 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size6, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff38 = {.datatype=MK_DATATYPE(S8), .default_to=0, .encodedin=89, .has_encodedin=1, .optional=1, .scale=16, .signpos=MK_SIGNPOS(imm4<3>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem559 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff38, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem560 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem561 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff38, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem562 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh25, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem563 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff38, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem564 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem565 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff38, .read=1, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_mem mem566 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size4, .type=MK_TYPE(MEM)};
static const amed_db_reg reg233 = {.datatype=MK_DATATYPE(S16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vbase vbase24 = {.reg=(void*)&reg233, .type=MK_TYPE(VBASE), .vds=MK_VDS(H)};
static const amed_db_vlist vlist73 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase24};
static const amed_db_mem mem567 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff34, .read=1, .size=(void*)&size2, .type=MK_TYPE(MEM)};
static const amed_db_reg reg234 = {.datatype=MK_DATATYPE(S32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vbase vbase25 = {.reg=(void*)&reg234, .type=MK_TYPE(VBASE), .vds=MK_VDS(S)};
static const amed_db_vlist vlist74 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase25};
static const amed_db_reg reg235 = {.datatype=MK_DATATYPE(S64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vbase vbase26 = {.reg=(void*)&reg235, .type=MK_TYPE(VBASE), .vds=MK_VDS(D)};
static const amed_db_vlist vlist75 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase26};
static const amed_db_mem mem568 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff36, .read=1, .size=(void*)&size3, .type=MK_TYPE(MEM)};
static const amed_db_immoff immoff39 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=19, .has_encodedin=1, .optional=1, .scale=4, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_mem mem569 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff39, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem570 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .immoff=(void*)&immoff39, .read=1, .size=(void*)&size0, .type=MK_TYPE(MEM)};
static const amed_db_mem mem571 = {.datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff31, .read=1, .size=(void*)&size15, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem572 = {.datatype=MK_DATATYPE(S8), .immoff=(void*)&immoff31, .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem573 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size18, .type=MK_TYPE(MEM)};
static const amed_db_mem mem574 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size15, .type=MK_TYPE(MEM)};
static const amed_db_mem mem575 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM)};
static const amed_db_mem mem576 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size18, .type=MK_TYPE(MEM)};
static const amed_db_mem mem577 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size15, .type=MK_TYPE(MEM)};
static const amed_db_mem mem578 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size16, .type=MK_TYPE(MEM)};
static const amed_db_mem mem579 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_mem mem580 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .size=(void*)&size15, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh5};
static const amed_db_mem mem581 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .size=(void*)&size16, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_mem mem582 = {.datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff33, .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem583 = {.datatype=MK_DATATYPE(S16), .immoff=(void*)&immoff33, .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem584 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM)};
static const amed_db_mem mem585 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM)};
static const amed_db_mem mem586 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size19, .type=MK_TYPE(MEM)};
static const amed_db_mem mem587 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size20, .type=MK_TYPE(MEM)};
static const amed_db_mem mem588 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh8};
static const amed_db_mem mem589 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh9};
static const amed_db_mem mem590 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_mem mem591 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .size=(void*)&size19, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh5};
static const amed_db_mem mem592 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh10};
static const amed_db_mem mem593 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .size=(void*)&size20, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_immoff immoff40 = {.datatype=MK_DATATYPE(U8), .default_to=0, .encodedin=5, .has_encodedin=1, .optional=1, .scale=4, .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMMOFF)};
static const amed_db_size size22 = {.esize=64, .size=32};
static const amed_db_mem mem594 = {.datatype=MK_DATATYPE(S32), .immoff=(void*)&immoff40, .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem595 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM)};
static const amed_db_mem mem596 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size22, .type=MK_TYPE(MEM)};
static const amed_db_shifter shifter38 = {.amount=(void*)&amount25, .extend=(void*)&extend7, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh11 = {.shifter=(void*)&shifter38, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem597 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh11};
static const amed_db_mem mem598 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_vregoffsh vregoffsh12 = {.shifter=(void*)&shifter37, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem599 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh12};
static const amed_db_mem mem600 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_mem mem601 = {.datatype=MK_DATATYPE(U32), .immoff=(void*)&immoff40, .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem602 = {.datatype=MK_DATATYPE(U32), .immoff=(void*)&immoff40, .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem603 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM)};
static const amed_db_mem mem604 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM)};
static const amed_db_mem mem605 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size13, .type=MK_TYPE(MEM)};
static const amed_db_mem mem606 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size22, .type=MK_TYPE(MEM)};
static const amed_db_vregoffsh vregoffsh13 = {.shifter=(void*)&shifter38, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem607 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh13};
static const amed_db_mem mem608 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh11};
static const amed_db_mem mem609 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_mem mem610 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh5};
static const amed_db_mem mem611 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh12};
static const amed_db_mem mem612 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .size=(void*)&size22, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_vlist vlist76 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase22};
static const amed_db_imm imm94 = {.datatype=MK_DATATYPE(S8), .default_to=0, .encodedin=89, .has_encodedin=1, .scale=2, .signpos=MK_SIGNPOS(imm4<3>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_immoffsh immoffsh1 = {.imm=(void*)&imm94, .optional=1, .shifter=(void*)&shifter31, .type=MK_TYPE(IMMOFFSH)};
static const amed_db_size size23 = {.esize=8, .size=16};
static const amed_db_mem mem613 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh1, .read=1, .size=(void*)&size23, .type=MK_TYPE(MEM)};
static const amed_db_mem mem614 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size23, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist77 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase21};
static const amed_db_size size24 = {.esize=64, .size=128};
static const amed_db_mem mem615 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh1, .read=1, .size=(void*)&size24, .type=MK_TYPE(MEM)};
static const amed_db_mem mem616 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh25, .size=(void*)&size24, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist78 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase23};
static const amed_db_size size25 = {.esize=16, .size=32};
static const amed_db_mem mem617 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh1, .read=1, .size=(void*)&size25, .type=MK_TYPE(MEM)};
static const amed_db_mem mem618 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size25, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist79 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase20};
static const amed_db_size size26 = {.esize=32, .size=64};
static const amed_db_mem mem619 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh1, .read=1, .size=(void*)&size26, .type=MK_TYPE(MEM)};
static const amed_db_mem mem620 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size26, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist80 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase22};
static const amed_db_imm imm95 = {.datatype=MK_DATATYPE(S8), .default_to=0, .encodedin=89, .has_encodedin=1, .scale=3, .signpos=MK_SIGNPOS(imm4<3>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_immoffsh immoffsh2 = {.imm=(void*)&imm95, .optional=1, .shifter=(void*)&shifter31, .type=MK_TYPE(IMMOFFSH)};
static const amed_db_size size27 = {.esize=8, .size=24};
static const amed_db_mem mem621 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh2, .read=1, .size=(void*)&size27, .type=MK_TYPE(MEM)};
static const amed_db_mem mem622 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size27, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist81 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase21};
static const amed_db_size size28 = {.esize=64, .size=192};
static const amed_db_mem mem623 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh2, .read=1, .size=(void*)&size28, .type=MK_TYPE(MEM)};
static const amed_db_mem mem624 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh25, .size=(void*)&size28, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist82 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase23};
static const amed_db_size size29 = {.esize=16, .size=48};
static const amed_db_mem mem625 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh2, .read=1, .size=(void*)&size29, .type=MK_TYPE(MEM)};
static const amed_db_mem mem626 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size29, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist83 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase20};
static const amed_db_size size30 = {.esize=32, .size=96};
static const amed_db_mem mem627 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh2, .read=1, .size=(void*)&size30, .type=MK_TYPE(MEM)};
static const amed_db_mem mem628 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size30, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist84 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase22};
static const amed_db_imm imm96 = {.datatype=MK_DATATYPE(S8), .default_to=0, .encodedin=89, .has_encodedin=1, .scale=4, .signpos=MK_SIGNPOS(imm4<3>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_immoffsh immoffsh3 = {.imm=(void*)&imm96, .optional=1, .shifter=(void*)&shifter31, .type=MK_TYPE(IMMOFFSH)};
static const amed_db_size size31 = {.esize=8, .size=32};
static const amed_db_mem mem629 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh3, .read=1, .size=(void*)&size31, .type=MK_TYPE(MEM)};
static const amed_db_mem mem630 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size31, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist85 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase21};
static const amed_db_size size32 = {.esize=64, .size=256};
static const amed_db_mem mem631 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh3, .read=1, .size=(void*)&size32, .type=MK_TYPE(MEM)};
static const amed_db_mem mem632 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh25, .size=(void*)&size32, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist86 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase23};
static const amed_db_size size33 = {.esize=16, .size=64};
static const amed_db_mem mem633 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh3, .read=1, .size=(void*)&size33, .type=MK_TYPE(MEM)};
static const amed_db_mem mem634 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size33, .type=MK_TYPE(MEM)};
static const amed_db_vlist vlist87 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase20};
static const amed_db_size size34 = {.esize=32, .size=128};
static const amed_db_mem mem635 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh3, .read=1, .size=(void*)&size34, .type=MK_TYPE(MEM)};
static const amed_db_mem mem636 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size34, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase27 = {.reg=(void*)&reg176, .type=MK_TYPE(VBASE), .vds=MK_VDS(S)};
static const amed_db_vlist vlist88 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase27};
static const amed_db_vbase vbase28 = {.reg=(void*)&reg178, .type=MK_TYPE(VBASE), .vds=MK_VDS(D)};
static const amed_db_vlist vlist89 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase28};
static const amed_db_vbase vbase29 = {.reg=(void*)&reg180, .type=MK_TYPE(VBASE), .vds=MK_VDS(B)};
static const amed_db_vlist vlist90 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase29};
static const amed_db_regoff regoff2 = {.default_to=MK_DEFAULT_TO(XZR), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REGOFF)};
static const amed_db_mem mem637 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size17, .type=MK_TYPE(MEM)};
static const amed_db_vbase vbase30 = {.reg=(void*)&reg181, .type=MK_TYPE(VBASE), .vds=MK_VDS(H)};
static const amed_db_vlist vlist91 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase30};
static const amed_db_mem mem638 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size18, .type=MK_TYPE(MEM)};
static const amed_db_mem mem639 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size15, .type=MK_TYPE(MEM)};
static const amed_db_mem mem640 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size16, .type=MK_TYPE(MEM)};
static const amed_db_reg reg236 = {.default_to=MK_DEFAULT_TO(XZR), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_regoffsh regoffsh28 = {.reg=(void*)&reg236, .shifter=(void*)&shifter33, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem641 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .regoffsh=(void*)&regoffsh28, .size=(void*)&size14, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh29 = {.reg=(void*)&reg236, .shifter=(void*)&shifter35, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem642 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .regoffsh=(void*)&regoffsh29, .size=(void*)&size21, .type=MK_TYPE(MEM)};
static const amed_db_mem mem643 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .regoffsh=(void*)&regoffsh29, .size=(void*)&size19, .type=MK_TYPE(MEM)};
static const amed_db_mem mem644 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U16), .read=1, .regoffsh=(void*)&regoffsh29, .size=(void*)&size20, .type=MK_TYPE(MEM)};
static const amed_db_reg reg237 = {.datatype=MK_DATATYPE(S32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vbase vbase31 = {.reg=(void*)&reg237, .type=MK_TYPE(VBASE), .vds=MK_VDS(S)};
static const amed_db_vlist vlist92 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase31};
static const amed_db_reg reg238 = {.datatype=MK_DATATYPE(S64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vbase vbase32 = {.reg=(void*)&reg238, .type=MK_TYPE(VBASE), .vds=MK_VDS(D)};
static const amed_db_vlist vlist93 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase32};
static const amed_db_reg reg239 = {.datatype=MK_DATATYPE(S16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vbase vbase33 = {.reg=(void*)&reg239, .type=MK_TYPE(VBASE), .vds=MK_VDS(H)};
static const amed_db_vlist vlist94 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase33};
static const amed_db_mem mem645 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size18, .type=MK_TYPE(MEM)};
static const amed_db_mem mem646 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size15, .type=MK_TYPE(MEM)};
static const amed_db_mem mem647 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size16, .type=MK_TYPE(MEM)};
static const amed_db_mem mem648 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh29, .size=(void*)&size19, .type=MK_TYPE(MEM)};
static const amed_db_mem mem649 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .regoffsh=(void*)&regoffsh29, .size=(void*)&size20, .type=MK_TYPE(MEM)};
static const amed_db_regoffsh regoffsh30 = {.reg=(void*)&reg236, .shifter=(void*)&shifter37, .type=MK_TYPE(REGOFFSH)};
static const amed_db_mem mem650 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .regoffsh=(void*)&regoffsh30, .size=(void*)&size22, .type=MK_TYPE(MEM)};
static const amed_db_mem mem651 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .regoffsh=(void*)&regoffsh30, .size=(void*)&size13, .type=MK_TYPE(MEM)};
static const amed_db_mem mem652 = {.base=(void*)&base0, .datatype=MK_DATATYPE(U32), .read=1, .regoffsh=(void*)&regoffsh30, .size=(void*)&size22, .type=MK_TYPE(MEM)};
static const amed_db_mem mem653 = {.datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size15, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem654 = {.datatype=MK_DATATYPE(U8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size16, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem655 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM)};
static const amed_db_mem mem656 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .regoff=(void*)&regoff1, .size=(void*)&size17, .type=MK_TYPE(MEM)};
static const amed_db_mem mem657 = {.datatype=MK_DATATYPE(U64), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size14, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem658 = {.datatype=MK_DATATYPE(U16), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size19, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem659 = {.datatype=MK_DATATYPE(U16), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size20, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem660 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM)};
static const amed_db_mem mem661 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .regoffsh=(void*)&regoffsh26, .size=(void*)&size21, .type=MK_TYPE(MEM)};
static const amed_db_mem mem662 = {.datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size15, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem663 = {.datatype=MK_DATATYPE(S8), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size16, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem664 = {.datatype=MK_DATATYPE(S16), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size19, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem665 = {.datatype=MK_DATATYPE(S16), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size20, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem666 = {.datatype=MK_DATATYPE(S32), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size22, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem667 = {.datatype=MK_DATATYPE(U32), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size13, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem668 = {.datatype=MK_DATATYPE(U32), .read=1, .regoff=(void*)&regoff2, .size=(void*)&size22, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem669 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh0, .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM)};
static const amed_db_mem mem670 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .regoffsh=(void*)&regoffsh27, .size=(void*)&size13, .type=MK_TYPE(MEM)};
static const amed_db_reg reg240 = {.encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_imm imm97 = {.datatype=MK_DATATYPE(S16), .default_to=0, .encodedin=162, .has_encodedin=1, .signpos=MK_SIGNPOS(imm9h<5>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_immoffsh immoffsh4 = {.imm=(void*)&imm97, .optional=1, .shifter=(void*)&shifter31, .type=MK_TYPE(IMMOFFSH)};
static const amed_db_size size35 = {.size=MK_SIZE(PL)};
static const amed_db_mem mem671 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh4, .read=1, .size=(void*)&size35, .type=MK_TYPE(MEM)};
static const amed_db_reg reg241 = {.encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_size size36 = {.size=MK_SIZE(VL)};
static const amed_db_mem mem672 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh4, .read=1, .size=(void*)&size36, .type=MK_TYPE(MEM)};
static const amed_db_ereg ereg52 = {.idx=(void*)&idx20, .reg=(void*)&reg190, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg242 = {.datatype=MK_DATATYPE(I32), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg53 = {.idx=(void*)&idx4, .reg=(void*)&reg242, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_reg reg243 = {.datatype=MK_DATATYPE(I64), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg54 = {.idx=(void*)&idx5, .reg=(void*)&reg243, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_reg reg244 = {.encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg245 = {.datatype=MK_DATATYPE(I16), .encodedin=37, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg131 = {.reg=(void*)&reg245, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg246 = {.datatype=MK_DATATYPE(I32), .encodedin=37, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg132 = {.reg=(void*)&reg246, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg247 = {.datatype=MK_DATATYPE(I64), .encodedin=37, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg133 = {.reg=(void*)&reg247, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_prf_op prf_op1 = {.encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(prfop), .table=(void*)&tbl_prf_op, .type=MK_TYPE(PRF_OP)};
static const amed_db_mem mem673 = {.datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff31, .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem674 = {.datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff31, .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_imm imm98 = {.datatype=MK_DATATYPE(S8), .default_to=0, .encodedin=19, .has_encodedin=1, .signpos=MK_SIGNPOS(imm6<5>), .symbol=MK_SYMBOL(imm), .type=MK_TYPE(IMM)};
static const amed_db_immoffsh immoffsh5 = {.imm=(void*)&imm98, .optional=1, .shifter=(void*)&shifter31, .type=MK_TYPE(IMMOFFSH)};
static const amed_db_mem mem675 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh5, .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM)};
static const amed_db_mem mem676 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh5};
static const amed_db_mem mem677 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh4};
static const amed_db_mem mem678 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .read=1, .size=(void*)&size17, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0};
static const amed_db_mem mem679 = {.datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff32, .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem680 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh5, .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM)};
static const amed_db_vregoffsh vregoffsh14 = {.shifter=(void*)&shifter34, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem681 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .read=1, .size=(void*)&size14, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh14};
static const amed_db_mem mem682 = {.datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff33, .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem683 = {.datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff33, .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem684 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh5, .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM)};
static const amed_db_mem mem685 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh8};
static const amed_db_mem mem686 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh9};
static const amed_db_mem mem687 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .read=1, .size=(void*)&size21, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh10};
static const amed_db_mem mem688 = {.datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff40, .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17};
static const amed_db_mem mem689 = {.datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff40, .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18};
static const amed_db_mem mem690 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh5, .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM)};
static const amed_db_mem mem691 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh13};
static const amed_db_mem mem692 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh11};
static const amed_db_mem mem693 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .read=1, .size=(void*)&size13, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh12};
static const amed_db_pattern pattern1 = {.default_to=MK_DEFAULT_TO(ALL), .encodedin=3, .has_encodedin=1, .optional=1, .symbol=MK_SYMBOL(pattern), .table=(void*)&tbl_pattern, .type=MK_TYPE(PATTERN)};
static const amed_db_preg preg6 = {.encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(PREG), .zeroing=1};
static const amed_db_imm imm99 = {.datatype=MK_DATATYPE(U8), .encodedin=164, .has_encodedin=1, .symbol=MK_SYMBOL(const), .type=MK_TYPE(IMM)};
static const amed_db_reg reg248 = {.datatype=MK_DATATYPE(S8), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg134 = {.reg=(void*)&reg248, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg249 = {.datatype=MK_DATATYPE(S8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg135 = {.reg=(void*)&reg249, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg250 = {.datatype=MK_DATATYPE(S8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg136 = {.reg=(void*)&reg250, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_vreg vreg137 = {.reg=(void*)&reg239, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg251 = {.datatype=MK_DATATYPE(S16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg138 = {.reg=(void*)&reg251, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg252 = {.datatype=MK_DATATYPE(S16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg139 = {.reg=(void*)&reg252, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_vreg vreg140 = {.reg=(void*)&reg237, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg253 = {.datatype=MK_DATATYPE(S32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg141 = {.reg=(void*)&reg253, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg254 = {.datatype=MK_DATATYPE(S32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg142 = {.reg=(void*)&reg254, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_vreg vreg143 = {.reg=(void*)&reg238, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg255 = {.datatype=MK_DATATYPE(S64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg144 = {.reg=(void*)&reg255, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg256 = {.datatype=MK_DATATYPE(S64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg145 = {.reg=(void*)&reg256, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_vreg vreg146 = {.reg=(void*)&reg233, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_vreg vreg147 = {.reg=(void*)&reg234, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_vreg vreg148 = {.reg=(void*)&reg235, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg257 = {.datatype=MK_DATATYPE(S8), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg55 = {.idx=(void*)&idx4, .reg=(void*)&reg257, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_reg reg258 = {.datatype=MK_DATATYPE(S16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg56 = {.idx=(void*)&idx5, .reg=(void*)&reg258, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg259 = {.datatype=MK_DATATYPE(S16), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg57 = {.idx=(void*)&idx18, .reg=(void*)&reg259, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_idx idx21 = {.encodedin=166, .has_encodedin=1, .type=MK_TYPE(IDX)};
static const amed_db_reg reg260 = {.datatype=MK_DATATYPE(S32), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg58 = {.idx=(void*)&idx21, .reg=(void*)&reg260, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_reg reg261 = {.datatype=MK_DATATYPE(S8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg149 = {.reg=(void*)&reg261, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_vbase vbase34 = {.reg=(void*)&reg171, .type=MK_TYPE(VBASE), .vds=MK_VDS(H)};
static const amed_db_vlist vlist95 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase34};
static const amed_db_vbase vbase35 = {.reg=(void*)&reg173, .type=MK_TYPE(VBASE), .vds=MK_VDS(S)};
static const amed_db_vlist vlist96 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase35};
static const amed_db_vbase vbase36 = {.reg=(void*)&reg175, .type=MK_TYPE(VBASE), .vds=MK_VDS(D)};
static const amed_db_vlist vlist97 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase36};
static const amed_db_reg reg262 = {.datatype=MK_DATATYPE(S64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg263 = {.datatype=MK_DATATYPE(S32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg264 = {.datatype=MK_DATATYPE(S8), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg150 = {.reg=(void*)&reg264, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg265 = {.datatype=MK_DATATYPE(S16), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg151 = {.reg=(void*)&reg265, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg266 = {.datatype=MK_DATATYPE(S32), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg152 = {.reg=(void*)&reg266, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg267 = {.datatype=MK_DATATYPE(S64), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg153 = {.reg=(void*)&reg267, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_ereg ereg59 = {.idx=(void*)&idx20, .reg=(void*)&reg259, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg268 = {.datatype=MK_DATATYPE(S32), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg60 = {.idx=(void*)&idx4, .reg=(void*)&reg268, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_reg reg269 = {.datatype=MK_DATATYPE(S64), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg61 = {.idx=(void*)&idx5, .reg=(void*)&reg269, .type=MK_TYPE(EREG), .vds=MK_VDS(D)};
static const amed_db_reg reg270 = {.datatype=MK_DATATYPE(U8), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg154 = {.reg=(void*)&reg270, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg271 = {.datatype=MK_DATATYPE(U16), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg155 = {.reg=(void*)&reg271, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg272 = {.datatype=MK_DATATYPE(U16), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg156 = {.reg=(void*)&reg272, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg273 = {.datatype=MK_DATATYPE(U32), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg157 = {.reg=(void*)&reg273, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg274 = {.datatype=MK_DATATYPE(U32), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg158 = {.reg=(void*)&reg274, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg275 = {.datatype=MK_DATATYPE(U64), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg159 = {.reg=(void*)&reg275, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg276 = {.datatype=MK_DATATYPE(U8), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg160 = {.reg=(void*)&reg276, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg277 = {.datatype=MK_DATATYPE(U16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg161 = {.reg=(void*)&reg277, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg278 = {.datatype=MK_DATATYPE(U32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg162 = {.reg=(void*)&reg278, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg279 = {.datatype=MK_DATATYPE(U64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg163 = {.reg=(void*)&reg279, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg280 = {.datatype=MK_DATATYPE(I32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase37 = {.reg=(void*)&reg280, .type=MK_TYPE(VBASE), .vds=MK_VDS(S)};
static const amed_db_vlist vlist98 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase37};
static const amed_db_mem mem694 = {.datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff31, .size=(void*)&size2, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17, .write=1};
static const amed_db_reg reg281 = {.datatype=MK_DATATYPE(I64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase38 = {.reg=(void*)&reg281, .type=MK_TYPE(VBASE), .vds=MK_VDS(D)};
static const amed_db_vlist vlist99 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase38};
static const amed_db_mem mem695 = {.datatype=MK_DATATYPE(I8), .immoff=(void*)&immoff31, .size=(void*)&size2, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_reg reg282 = {.datatype=MK_DATATYPE(I8), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase39 = {.reg=(void*)&reg282, .type=MK_TYPE(VBASE), .vds=MK_VDS(B)};
static const amed_db_vlist vlist100 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase39};
static const amed_db_mem mem696 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh0, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg283 = {.datatype=MK_DATATYPE(I16), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vbase vbase40 = {.reg=(void*)&reg283, .type=MK_TYPE(VBASE), .vds=MK_VDS(H)};
static const amed_db_vlist vlist101 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase40};
static const amed_db_mem mem697 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoff=(void*)&regoff1, .size=(void*)&size2, .type=MK_TYPE(MEM), .write=1};
static const amed_db_extend extend8 = {.encodedin=122, .has_encodedin=1, .symbol=MK_SYMBOL(mod), .table=(void*)&tbl_extend5, .type=MK_TYPE(EXTEND)};
static const amed_db_shifter shifter39 = {.extend=(void*)&extend8, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh15 = {.shifter=(void*)&shifter39, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem698 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size2, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh15, .write=1};
static const amed_db_vregoffsh vregoffsh16 = {.shifter=(void*)&shifter39, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem699 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size2, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh16, .write=1};
static const amed_db_mem mem700 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .size=(void*)&size2, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0, .write=1};
static const amed_db_mem mem701 = {.datatype=MK_DATATYPE(I64), .immoff=(void*)&immoff32, .size=(void*)&size1, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_mem mem702 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh0, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem703 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .regoffsh=(void*)&regoffsh25, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_shifter shifter40 = {.amount=(void*)&amount23, .extend=(void*)&extend8, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh17 = {.shifter=(void*)&shifter40, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem704 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size1, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh17, .write=1};
static const amed_db_mem mem705 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size1, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh15, .write=1};
static const amed_db_mem mem706 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size1, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh7, .write=1};
static const amed_db_mem mem707 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .size=(void*)&size1, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0, .write=1};
static const amed_db_mem mem708 = {.datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff33, .size=(void*)&size3, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17, .write=1};
static const amed_db_mem mem709 = {.datatype=MK_DATATYPE(I16), .immoff=(void*)&immoff33, .size=(void*)&size3, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_mem mem710 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh0, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem711 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .regoffsh=(void*)&regoffsh26, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_shifter shifter41 = {.amount=(void*)&amount24, .extend=(void*)&extend8, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh18 = {.shifter=(void*)&shifter41, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem712 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size3, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh18, .write=1};
static const amed_db_vregoffsh vregoffsh19 = {.shifter=(void*)&shifter41, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem713 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size3, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh19, .write=1};
static const amed_db_mem mem714 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size3, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh15, .write=1};
static const amed_db_mem mem715 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size3, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh16, .write=1};
static const amed_db_mem mem716 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size3, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh10, .write=1};
static const amed_db_mem mem717 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .size=(void*)&size3, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0, .write=1};
static const amed_db_mem mem718 = {.datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff40, .size=(void*)&size0, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17, .write=1};
static const amed_db_mem mem719 = {.datatype=MK_DATATYPE(I32), .immoff=(void*)&immoff40, .size=(void*)&size0, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_mem mem720 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh0, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem721 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .regoffsh=(void*)&regoffsh27, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_shifter shifter42 = {.amount=(void*)&amount25, .extend=(void*)&extend8, .type=MK_TYPE(SHIFTER)};
static const amed_db_vregoffsh vregoffsh20 = {.shifter=(void*)&shifter42, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg103};
static const amed_db_mem mem722 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size0, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh20, .write=1};
static const amed_db_vregoffsh vregoffsh21 = {.shifter=(void*)&shifter42, .type=MK_TYPE(VREGOFFSH), .vreg=(void*)&vreg104};
static const amed_db_mem mem723 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size0, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh21, .write=1};
static const amed_db_mem mem724 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size0, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh15, .write=1};
static const amed_db_mem mem725 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size0, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh16, .write=1};
static const amed_db_mem mem726 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size0, .type=MK_TYPE(MEM), .vregoffsh=(void*)&vregoffsh12, .write=1};
static const amed_db_mem mem727 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .size=(void*)&size0, .type=MK_TYPE(MEM), .vregoff=(void*)&vregoff0, .write=1};
static const amed_db_vlist vlist102 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase39};
static const amed_db_mem mem728 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem729 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoff=(void*)&regoff1, .size=(void*)&size3, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist103 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase38};
static const amed_db_mem mem730 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh1, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem731 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .regoffsh=(void*)&regoffsh25, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist104 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase40};
static const amed_db_mem mem732 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem733 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .regoffsh=(void*)&regoffsh26, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist105 = {.count=(void*)&count1, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase37};
static const amed_db_mem mem734 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh1, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem735 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .regoffsh=(void*)&regoffsh27, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist106 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase39};
static const amed_db_mem mem736 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh2, .size=(void*)&size10, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem737 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoff=(void*)&regoff1, .size=(void*)&size10, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist107 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase38};
static const amed_db_mem mem738 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh2, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem739 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .regoffsh=(void*)&regoffsh25, .size=(void*)&size7, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist108 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase40};
static const amed_db_mem mem740 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh2, .size=(void*)&size11, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem741 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .regoffsh=(void*)&regoffsh26, .size=(void*)&size11, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist109 = {.count=(void*)&count2, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase37};
static const amed_db_mem mem742 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh2, .size=(void*)&size12, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem743 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .regoffsh=(void*)&regoffsh27, .size=(void*)&size12, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist110 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase39};
static const amed_db_mem mem744 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh3, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem745 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .regoff=(void*)&regoff1, .size=(void*)&size0, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist111 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase38};
static const amed_db_mem mem746 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .immoffsh=(void*)&immoffsh3, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem747 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I64), .regoffsh=(void*)&regoffsh25, .size=(void*)&size6, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist112 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase40};
static const amed_db_mem mem748 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .immoffsh=(void*)&immoffsh3, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem749 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I16), .regoffsh=(void*)&regoffsh26, .size=(void*)&size1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vlist vlist113 = {.count=(void*)&count3, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase37};
static const amed_db_mem mem750 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .immoffsh=(void*)&immoffsh3, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem751 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I32), .regoffsh=(void*)&regoffsh27, .size=(void*)&size4, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem752 = {.datatype=MK_DATATYPE(I8), .regoff=(void*)&regoff2, .size=(void*)&size2, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17, .write=1};
static const amed_db_mem mem753 = {.datatype=MK_DATATYPE(I8), .regoff=(void*)&regoff2, .size=(void*)&size2, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_mem mem754 = {.datatype=MK_DATATYPE(I64), .regoff=(void*)&regoff2, .size=(void*)&size1, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_mem mem755 = {.datatype=MK_DATATYPE(I16), .regoff=(void*)&regoff2, .size=(void*)&size3, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17, .write=1};
static const amed_db_mem mem756 = {.datatype=MK_DATATYPE(I16), .regoff=(void*)&regoff2, .size=(void*)&size3, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_mem mem757 = {.datatype=MK_DATATYPE(I32), .regoff=(void*)&regoff2, .size=(void*)&size0, .type=MK_TYPE(MEM), .vbase=(void*)&vbase17, .write=1};
static const amed_db_mem mem758 = {.datatype=MK_DATATYPE(I32), .regoff=(void*)&regoff2, .size=(void*)&size0, .type=MK_TYPE(MEM), .vbase=(void*)&vbase18, .write=1};
static const amed_db_reg reg284 = {.encodedin=37, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem759 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh4, .size=(void*)&size35, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg285 = {.encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem760 = {.base=(void*)&base0, .datatype=MK_DATATYPE(I8), .immoffsh=(void*)&immoffsh4, .size=(void*)&size36, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg286 = {.datatype=MK_DATATYPE(U8), .encodedin=3, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg164 = {.reg=(void*)&reg286, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg287 = {.datatype=MK_DATATYPE(U8), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg62 = {.idx=(void*)&idx4, .reg=(void*)&reg287, .type=MK_TYPE(EREG), .vds=MK_VDS(B)};
static const amed_db_vlist vlist114 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase19};
static const amed_db_vlist vlist115 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase34};
static const amed_db_vlist vlist116 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase35};
static const amed_db_vlist vlist117 = {.count=(void*)&count0, .type=MK_TYPE(VLIST), .vbase=(void*)&vbase36};
static const amed_db_reg reg288 = {.datatype=MK_DATATYPE(I16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg165 = {.reg=(void*)&reg288, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg289 = {.datatype=MK_DATATYPE(I32), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg166 = {.reg=(void*)&reg289, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg290 = {.datatype=MK_DATATYPE(I64), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg167 = {.reg=(void*)&reg290, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_vreg vreg168 = {.reg=(void*)&reg210, .type=MK_TYPE(VREG), .vds=MK_VDS(Q)};
static const amed_db_reg reg291 = {.datatype=MK_DATATYPE(I128), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg169 = {.reg=(void*)&reg291, .type=MK_TYPE(VREG), .vds=MK_VDS(Q)};
static const amed_db_reg reg292 = {.datatype=MK_DATATYPE(U8), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg170 = {.reg=(void*)&reg292, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg293 = {.datatype=MK_DATATYPE(U16), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg171 = {.reg=(void*)&reg293, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg294 = {.datatype=MK_DATATYPE(U32), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg172 = {.reg=(void*)&reg294, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg295 = {.datatype=MK_DATATYPE(U64), .encodedin=5, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg173 = {.reg=(void*)&reg295, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg296 = {.datatype=MK_DATATYPE(U64), .encodedin=1, .has_encodedin=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg174 = {.reg=(void*)&reg296, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg297 = {.datatype=MK_DATATYPE(U16), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg63 = {.idx=(void*)&idx5, .reg=(void*)&reg297, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg298 = {.datatype=MK_DATATYPE(U16), .encodedin=65, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg64 = {.idx=(void*)&idx18, .reg=(void*)&reg298, .type=MK_TYPE(EREG), .vds=MK_VDS(H)};
static const amed_db_reg reg299 = {.datatype=MK_DATATYPE(U32), .encodedin=89, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SVEREG), .type=MK_TYPE(REG)};
static const amed_db_ereg ereg65 = {.idx=(void*)&idx21, .reg=(void*)&reg299, .type=MK_TYPE(EREG), .vds=MK_VDS(S)};
static const amed_db_reg reg300 = {.datatype=MK_DATATYPE(U32), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg301 = {.datatype=MK_DATATYPE(U64), .encodedin=1, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg302 = {.datatype=MK_DATATYPE(U8), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg175 = {.reg=(void*)&reg302, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg303 = {.datatype=MK_DATATYPE(U16), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg176 = {.reg=(void*)&reg303, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg304 = {.datatype=MK_DATATYPE(U32), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg177 = {.reg=(void*)&reg304, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg305 = {.datatype=MK_DATATYPE(U64), .encodedin=140, .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg178 = {.reg=(void*)&reg305, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
static const amed_db_reg reg306 = {.datatype=MK_DATATYPE(S8), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg179 = {.reg=(void*)&reg306, .type=MK_TYPE(VREG), .vds=MK_VDS(B)};
static const amed_db_reg reg307 = {.datatype=MK_DATATYPE(S16), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg180 = {.reg=(void*)&reg307, .type=MK_TYPE(VREG), .vds=MK_VDS(H)};
static const amed_db_reg reg308 = {.datatype=MK_DATATYPE(S32), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg181 = {.reg=(void*)&reg308, .type=MK_TYPE(VREG), .vds=MK_VDS(S)};
static const amed_db_reg reg309 = {.datatype=MK_DATATYPE(S64), .encodedin=37, .has_encodedin=1, .symbol=MK_SYMBOL(PRDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg182 = {.reg=(void*)&reg309, .type=MK_TYPE(VREG), .vds=MK_VDS(D)};
