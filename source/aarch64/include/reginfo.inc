/*BEGIN_HEADER
*
* Copyright (C) 2020 Mahdi Safsafi.
*
* https://github.com/MahdiSafsafi/AMED
*
* See licence file 'LICENCE' for use and distribution rights.
*
*END_HEADER*/


/*===----------------------------------------------------------------------===*\
|*                                                                            *|
|*                Automatically generated file, do not edit!                  *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

const amed_db_reginfo amed_aarch64_reginfo_array[] = {
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=1, .reg=MK_REG(NONE), .size=0, .symbol=MK_SYMBOL(NONE)}, 
{.datatype=MK_DATATYPE(I32), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(W0), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W1), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W2), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W3), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W4), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W5), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W6), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W7), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W8), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W9), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W10), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W11), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W12), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W13), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W14), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W15), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W16), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W17), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W18), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W19), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W20), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W21), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W22), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W23), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W24), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W25), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W26), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W27), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W28), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(W29), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(W30), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=31, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(WZR), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=32, .is_even=1, .is_first=0, .is_last=1, .reg=MK_REG(WSP), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I64), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(X0), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X1), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X2), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X3), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X4), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X5), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X6), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X7), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X8), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X9), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X10), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X11), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X12), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X13), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X14), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X15), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X16), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X17), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X18), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X19), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X20), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X21), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X22), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X23), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X24), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X25), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X26), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X27), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X28), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(X29), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(X30), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=31, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(XZR), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=32, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I64), .encoding=33, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(PC), .size=64, .symbol=MK_SYMBOL(GPR64)}, 
{.datatype=MK_DATATYPE(I8), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(B0), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B1), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B2), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B3), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B4), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B5), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B6), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B7), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B8), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B9), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B10), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B11), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B12), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B13), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B14), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B15), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B16), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B17), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B18), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B19), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B20), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B21), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B22), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B23), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B24), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B25), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B26), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B27), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B28), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(B29), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(B30), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(I8), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(B31), .size=8, .symbol=MK_SYMBOL(SIMD8)}, 
{.datatype=MK_DATATYPE(F16), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(H0), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H1), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H2), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H3), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H4), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H5), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H6), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H7), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H8), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H9), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H10), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H11), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H12), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H13), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H14), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H15), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H16), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H17), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H18), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H19), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H20), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H21), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H22), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H23), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H24), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H25), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H26), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H27), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H28), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(H29), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(H30), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F16), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(H31), .size=16, .symbol=MK_SYMBOL(SIMD16)}, 
{.datatype=MK_DATATYPE(F32), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(S0), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S1), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S2), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S3), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S4), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S5), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S6), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S7), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S8), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S9), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S10), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S11), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S12), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S13), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S14), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S15), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S16), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S17), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S18), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S19), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S20), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S21), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S22), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S23), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S24), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S25), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S26), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S27), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S28), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S29), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S30), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(S31), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F64), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(D0), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D1), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D2), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D3), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D4), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D5), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D6), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D7), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D8), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D9), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D10), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D11), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D12), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D13), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D14), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D15), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D16), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D17), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D18), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D19), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D20), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D21), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D22), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D23), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D24), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D25), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D26), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D27), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D28), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D29), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D30), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(D31), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(Q0), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q1), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q2), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q3), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q4), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q5), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q6), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q7), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q8), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q9), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q10), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q11), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q12), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q13), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q14), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q15), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q16), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q17), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q18), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q19), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q20), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q21), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q22), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q23), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q24), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q25), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q26), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q27), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q28), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q29), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q30), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(Q31), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(V0), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V1), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V2), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V3), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V4), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V5), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V6), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V7), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V8), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V9), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V10), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V11), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V12), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V13), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V14), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V15), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V16), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V17), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V18), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V19), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V20), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V21), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V22), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V23), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V24), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V25), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V26), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V27), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V28), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(V29), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(V30), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(V31), .size=128, .symbol=MK_SYMBOL(VECREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(P0), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(P1), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(P2), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(P3), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(P4), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(P5), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(P6), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(P7), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(P8), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(P9), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(P10), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(P11), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(P12), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(P13), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(P14), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=15, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(P15), .size=0, .symbol=MK_SYMBOL(PRDREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(Z0), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z1), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z2), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z3), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z4), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z5), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z6), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z7), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z8), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z9), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z10), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z11), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z12), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z13), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z14), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z15), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z16), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z17), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z18), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z19), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z20), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z21), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z22), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z23), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z24), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z25), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z26), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z27), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z28), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Z29), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Z30), .size=0, .symbol=MK_SYMBOL(SVEREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(Z31), .size=0, .symbol=MK_SYMBOL(SVEREG)}};
