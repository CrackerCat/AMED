/*BEGIN_HEADER
*
* Copyright (C) 2020 Mahdi Safsafi.
*
* https://github.com/MahdiSafsafi/AMED
*
* See licence file 'LICENCE' for use and distribution rights.
*
*END_HEADER*/


/*===----------------------------------------------------------------------===*\
|*                                                                            *|
|*                Automatically generated file, do not edit!                  *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

const amed_db_reginfo amed_aarch32_reginfo_array[] = {
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=1, .reg=MK_REG(NONE), .size=0, .symbol=MK_SYMBOL(NONE)}, 
{.datatype=MK_DATATYPE(I32), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(R0), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R1), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R2), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R3), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R4), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R5), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R6), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R7), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R8), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R9), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R10), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R11), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R12), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(SP), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(LR), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(I32), .encoding=15, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(PC), .size=32, .symbol=MK_SYMBOL(GPR32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(S0), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S1), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S2), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S3), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S4), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S5), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S6), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S7), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S8), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S9), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S10), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S11), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S12), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S13), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S14), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S15), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S16), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S17), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S18), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S19), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S20), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S21), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S22), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S23), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S24), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S25), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S26), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S27), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S28), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(S29), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(S30), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F32), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(S31), .size=32, .symbol=MK_SYMBOL(SIMD32)}, 
{.datatype=MK_DATATYPE(F64), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(D0), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D1), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D2), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D3), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D4), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D5), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D6), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D7), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D8), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D9), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D10), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D11), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D12), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D13), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D14), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D15), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D16), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D17), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D18), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D19), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D20), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D21), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D22), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D23), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D24), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D25), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D26), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D27), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D28), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(D29), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(D30), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(F64), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(D31), .size=64, .symbol=MK_SYMBOL(SIMD64)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(Q0), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q1), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q2), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q3), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q4), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q5), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q6), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q7), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q8), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q9), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q10), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q11), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q12), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q13), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q14), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q15), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q16), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q17), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q18), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q19), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q20), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q21), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q22), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q23), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q24), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q25), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q26), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q27), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q28), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(Q29), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(Q30), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=31, .is_even=0, .is_first=0, .is_last=1, .reg=MK_REG(Q31), .size=128, .symbol=MK_SYMBOL(SIMD128)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=0, .is_even=1, .is_first=1, .is_last=0, .reg=MK_REG(NONE), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=1, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R8_usr), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=2, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R9_usr), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=3, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R10_usr), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=4, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R11_usr), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=5, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R12_usr), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=6, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP_usr), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=7, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(LR_usr), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=8, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R8_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=9, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R9_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=10, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R10_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=11, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(R11_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=12, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(R12_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=13, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(SP_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=14, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(LR_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=15, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(LR_irq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=16, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP_irq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=17, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(LR_svc), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=18, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP_svc), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=19, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(LR_abt), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=20, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP_abt), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=21, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(LR_und), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=22, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP_und), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=23, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(LR_mon), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=24, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP_mon), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=25, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(ELR_hyp), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=26, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SP_hyp), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=27, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(SPSR_fiq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=28, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SPSR_irq), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=29, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(SPSR_svc), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=30, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SPSR_abt), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=31, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(SPSR_und), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=32, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SPSR_mon), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=33, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(SPSR_hyp), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=34, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(CPSR), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=35, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(APSR), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=36, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(SPSR), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=37, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(FPSID), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=38, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(FPSCR), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=39, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(MVFR2), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=40, .is_even=1, .is_first=0, .is_last=0, .reg=MK_REG(MVFR1), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=41, .is_even=0, .is_first=0, .is_last=0, .reg=MK_REG(MVFR0), .size=0, .symbol=MK_SYMBOL(SYSREG)}, 
{.datatype=MK_DATATYPE(NONE), .encoding=42, .is_even=1, .is_first=0, .is_last=1, .reg=MK_REG(FPEXC), .size=0, .symbol=MK_SYMBOL(SYSREG)}};
