/*BEGIN_HEADER
*
* Copyright (C) 2020 Mahdi Safsafi.
*
* https://github.com/MahdiSafsafi/AMED
*
* See licence file 'LICENCE' for use and distribution rights.
*
*END_HEADER*/


/*===----------------------------------------------------------------------===*\
|*                                                                            *|
|*                Automatically generated file, do not edit!                  *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

static const amed_db_reg reg0 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AL), .write=1};
static const amed_db_reg reg1 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AH), .write=1};
static const amed_db_imm imm0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(UIMM), .type=MK_TYPE(IMM)};
static const amed_db_reg reg2 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AH), .write=1};
static const amed_db_reg reg3 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(AL), .write=1};
static const amed_db_imm imm1 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(SIMM), .type=MK_TYPE(IMM)};
static const amed_db_reg reg4 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg5 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG)};
static const amed_db_mem mem0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg6 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg7 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG)};
static const amed_db_mem mem1 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=-1, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_imm imm2 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(IZ), .has_encodedin=1, .size=-3, .symbol=MK_SYMBOL(SIMM), .type=MK_TYPE(IMM)};
static const amed_db_reg reg8 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg9 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG)};
static const amed_db_mem mem2 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg10 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg11 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG)};
static const amed_db_mem mem3 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=-1, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg12 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(AXv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg13 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg14 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg15 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg16 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_mem mem4 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem5 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg0 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg1 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem6 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg2 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_reg reg17 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg18 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg19 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg20 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg21 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR16), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg22 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR16), .type=MK_TYPE(REG)};
static const amed_db_mem mem7 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg23 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg24 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem8 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem9 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg25 = {.conditional_writing=1, .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg26 = {.encodedin=MK_ENCODEDIN(OPCODE), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_ptr ptr0 = {.encodedin=MK_ENCODEDIN(IDPP), .has_encodedin=1, .read=1, .size=-4, .symbol=MK_SYMBOL(PTR), .type=MK_TYPE(PTR)};
static const amed_db_reg reg27 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EIP), .write=1};
static const amed_db_reg reg28 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(SPa), .type=MK_TYPE(REG), .write=1};
static const amed_db_base base0 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SPa), .type=MK_TYPE(BASE)};
static const amed_db_mem mem10 = {.base=(void*)&base0, .datatype=MK_DATATYPE(SX), .size=-8, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem11 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=-5, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg29 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .suppressed=1, .symbol=MK_SYMBOL(IPa), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg30 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(IPa), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem12 = {.base=(void*)&base0, .datatype=MK_DATATYPE(SX), .size=-1, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_rel rel0 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(ID), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(REL), .type=MK_TYPE(REL)};
static const amed_db_reg reg31 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RIP), .write=1};
static const amed_db_rel rel1 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(IZ), .has_encodedin=1, .size=-3, .symbol=MK_SYMBOL(REL), .type=MK_TYPE(REL)};
static const amed_db_reg reg32 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EIP), .write=1};
static const amed_db_reg reg33 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AX), .write=1};
static const amed_db_reg reg34 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AL)};
static const amed_db_reg reg35 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RAX), .write=1};
static const amed_db_reg reg36 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX)};
static const amed_db_reg reg37 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX), .write=1};
static const amed_db_reg reg38 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AX)};
static const amed_db_reg reg39 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(AL)};
static const amed_db_reg reg40 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(AXv), .type=MK_TYPE(REG)};
static const amed_db_base base1 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SIa), .type=MK_TYPE(BASE)};
static const amed_db_seg seg0 = {.read=1, .type=MK_TYPE(SEG), .value=MK_SEG(DS)};
static const amed_db_mem mem13 = {.base=(void*)&base1, .datatype=MK_DATATYPE(U8), .read=1, .seg=(void*)&seg0, .size=8, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_base base2 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(DIa), .type=MK_TYPE(BASE)};
static const amed_db_seg seg1 = {.read=1, .type=MK_TYPE(SEG), .value=MK_SEG(ES)};
static const amed_db_mem mem14 = {.base=(void*)&base2, .datatype=MK_DATATYPE(U8), .read=1, .seg=(void*)&seg1, .size=8, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem15 = {.base=(void*)&base1, .conditional_reading=1, .datatype=MK_DATATYPE(U8), .read=1, .seg=(void*)&seg0, .size=8, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem16 = {.base=(void*)&base2, .conditional_reading=1, .datatype=MK_DATATYPE(U8), .read=1, .seg=(void*)&seg1, .size=8, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg41 = {.aszscaling=1, .conditional_writing=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(CXa), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem17 = {.base=(void*)&base1, .datatype=MK_DATATYPE(S32), .read=1, .seg=(void*)&seg0, .size=32, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem18 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S32), .read=1, .seg=(void*)&seg1, .size=32, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem19 = {.base=(void*)&base1, .conditional_reading=1, .datatype=MK_DATATYPE(S32), .read=1, .seg=(void*)&seg0, .size=32, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem20 = {.base=(void*)&base2, .conditional_reading=1, .datatype=MK_DATATYPE(S32), .read=1, .seg=(void*)&seg1, .size=32, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem21 = {.base=(void*)&base1, .datatype=MK_DATATYPE(S64), .read=1, .seg=(void*)&seg0, .size=64, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem22 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S64), .read=1, .seg=(void*)&seg1, .size=64, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem23 = {.base=(void*)&base1, .conditional_reading=1, .datatype=MK_DATATYPE(S64), .read=1, .seg=(void*)&seg0, .size=64, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem24 = {.base=(void*)&base2, .conditional_reading=1, .datatype=MK_DATATYPE(S64), .read=1, .seg=(void*)&seg1, .size=64, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem25 = {.base=(void*)&base1, .datatype=MK_DATATYPE(S16), .read=1, .seg=(void*)&seg0, .size=16, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem26 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S16), .read=1, .seg=(void*)&seg1, .size=16, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem27 = {.base=(void*)&base1, .conditional_reading=1, .datatype=MK_DATATYPE(S16), .read=1, .seg=(void*)&seg0, .size=16, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem28 = {.base=(void*)&base2, .conditional_reading=1, .datatype=MK_DATATYPE(S16), .read=1, .seg=(void*)&seg1, .size=16, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg42 = {.conditional_writing=1, .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg43 = {.conditional_writing=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AL), .write=1};
static const amed_db_mem mem29 = {.conditional_writing=1, .datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg44 = {.conditional_writing=1, .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg45 = {.conditional_writing=1, .encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(AXv), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem30 = {.conditional_writing=1, .datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=-1, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem31 = {.conditional_writing=1, .datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg46 = {.conditional_writing=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RDX), .write=1};
static const amed_db_reg reg47 = {.conditional_writing=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RAX), .write=1};
static const amed_db_reg reg48 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RCX)};
static const amed_db_reg reg49 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RBX)};
static const amed_db_mem mem32 = {.conditional_writing=1, .datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg50 = {.conditional_writing=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX), .write=1};
static const amed_db_reg reg51 = {.conditional_writing=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX), .write=1};
static const amed_db_reg reg52 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ECX)};
static const amed_db_reg reg53 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EBX)};
static const amed_db_reg reg54 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX), .write=1};
static const amed_db_reg reg55 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EBX), .write=1};
static const amed_db_reg reg56 = {.conditional_reading=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ECX), .write=1};
static const amed_db_reg reg57 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX), .write=1};
static const amed_db_reg reg58 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RDX), .write=1};
static const amed_db_reg reg59 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RAX)};
static const amed_db_reg reg60 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(DX), .write=1};
static const amed_db_reg reg61 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AX), .write=1};
static const amed_db_reg reg62 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(AXv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg63 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(DXv), .type=MK_TYPE(REG), .write=1};
static const amed_db_imm imm3 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(IW), .has_encodedin=1, .size=16, .symbol=MK_SYMBOL(SIMM), .type=MK_TYPE(IMM)};
static const amed_db_reg reg64 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(BPv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg65 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .suppressed=1, .symbol=MK_SYMBOL(DXv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg66 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg67 = {.type=MK_TYPE(REG), .value=MK_REG(AL), .write=1};
static const amed_db_reg reg68 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(DX)};
static const amed_db_reg reg69 = {.type=MK_TYPE(REG), .value=MK_REG(AX), .write=1};
static const amed_db_reg reg70 = {.type=MK_TYPE(REG), .value=MK_REG(EAX), .write=1};
static const amed_db_mem mem33 = {.base=(void*)&base2, .datatype=MK_DATATYPE(U8), .seg=(void*)&seg1, .size=8, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg71 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(DX)};
static const amed_db_mem mem34 = {.base=(void*)&base2, .conditional_writing=1, .datatype=MK_DATATYPE(U8), .seg=(void*)&seg1, .size=8, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem35 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S32), .seg=(void*)&seg1, .size=32, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem36 = {.base=(void*)&base2, .conditional_writing=1, .datatype=MK_DATATYPE(S32), .seg=(void*)&seg1, .size=32, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem37 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S16), .seg=(void*)&seg1, .size=16, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem38 = {.base=(void*)&base2, .conditional_writing=1, .datatype=MK_DATATYPE(S16), .seg=(void*)&seg1, .size=16, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem39 = {.base=(void*)&base0, .datatype=MK_DATATYPE(SX), .read=1, .size=-6, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg72 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RIP), .write=1};
static const amed_db_rel rel2 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(REL), .type=MK_TYPE(REL)};
static const amed_db_reg reg73 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(CX)};
static const amed_db_reg reg74 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(IP), .write=1};
static const amed_db_mem mem40 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_agen agen0 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(AGEN), .type=MK_TYPE(AGEN)};
static const amed_db_base base3 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(BPa), .type=MK_TYPE(BASE)};
static const amed_db_seg seg2 = {.read=1, .type=MK_TYPE(SEG), .value=MK_SEG(SS)};
static const amed_db_mem mem41 = {.base=(void*)&base3, .datatype=MK_DATATYPE(SX), .read=1, .seg=(void*)&seg2, .size=-1, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg75 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(SPv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg76 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR16), .type=MK_TYPE(REG)};
static const amed_db_reg reg77 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(LDTR), .write=1};
static const amed_db_reg reg78 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(CR0), .write=1};
static const amed_db_reg reg79 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AL), .write=1};
static const amed_db_reg reg80 = {.conditional_writing=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AL), .write=1};
static const amed_db_reg reg81 = {.conditional_writing=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX), .write=1};
static const amed_db_reg reg82 = {.conditional_writing=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RAX), .write=1};
static const amed_db_reg reg83 = {.conditional_writing=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AX), .write=1};
static const amed_db_reg reg84 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(CXa), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg85 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRz), .type=MK_TYPE(REG)};
static const amed_db_reg reg86 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(TR), .write=1};
static const amed_db_reg reg87 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg88 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG)};
static const amed_db_mem mem42 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=80, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg89 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(GDTR), .write=1};
static const amed_db_mem mem43 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=-7, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg90 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(IDTR), .write=1};
static const amed_db_reg reg91 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPRz), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem44 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=-4, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg92 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(DS), .write=1};
static const amed_db_reg reg93 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ES), .write=1};
static const amed_db_reg reg94 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(FS), .write=1};
static const amed_db_reg reg95 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(GS), .write=1};
static const amed_db_reg reg96 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(SS), .write=1};
static const amed_db_moffs moffs0 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(MOFFS), .type=MK_TYPE(MOFFS)};
static const amed_db_reg reg97 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem45 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg98 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem46 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=-1, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg99 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(SEGREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem47 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg100 = {.encodedin=MK_ENCODEDIN(OPCODE), .has_encodedin=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg101 = {.encodedin=MK_ENCODEDIN(OPCODE), .has_encodedin=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG), .write=1};
static const amed_db_imm imm4 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(IV), .has_encodedin=1, .size=-1, .symbol=MK_SYMBOL(SIMM), .type=MK_TYPE(IMM)};
static const amed_db_reg reg102 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg103 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(SEGREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_moffs moffs1 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(MOFFS), .type=MK_TYPE(MOFFS), .write=1};
static const amed_db_moffs moffs2 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(IV), .has_encodedin=1, .size=-1, .symbol=MK_SYMBOL(MOFFS), .type=MK_TYPE(MOFFS), .write=1};
static const amed_db_reg reg104 = {.encodedin=MK_ENCODEDIN(OSZ), .has_encodedin=1, .symbol=MK_SYMBOL(AXv), .type=MK_TYPE(REG), .write=1};
static const amed_db_moffs moffs3 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(IV), .has_encodedin=1, .read=1, .size=-1, .symbol=MK_SYMBOL(MOFFS), .type=MK_TYPE(MOFFS)};
static const amed_db_reg reg105 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRa), .type=MK_TYPE(REG)};
static const amed_db_mem mem48 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_base base4 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRa), .type=MK_TYPE(BASE)};
static const amed_db_mem mem49 = {.base=(void*)&base4, .datatype=MK_DATATYPE(S32), .size=512, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem50 = {.base=(void*)&base4, .datatype=MK_DATATYPE(S32), .seg=(void*)&seg1, .size=512, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem51 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg106 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_mem mem52 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg107 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_mem mem53 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S64), .seg=(void*)&seg1, .size=64, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem54 = {.base=(void*)&base2, .conditional_writing=1, .datatype=MK_DATATYPE(S64), .seg=(void*)&seg1, .size=64, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg108 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg109 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(CREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg110 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg111 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(CREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg112 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg113 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg114 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(DREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg115 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(DREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg116 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX)};
static const amed_db_reg reg117 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RDX)};
static const amed_db_reg reg118 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(AX)};
static const amed_db_reg reg119 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(EAX)};
static const amed_db_vreg vreg3 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg4 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg5 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem55 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg120 = {.datatype=MK_DATATYPE(U32), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX), .write=1};
static const amed_db_reg reg121 = {.conditional_reading=1, .datatype=MK_DATATYPE(U32), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EBX), .write=1};
static const amed_db_reg reg122 = {.conditional_reading=1, .datatype=MK_DATATYPE(U32), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ECX), .write=1};
static const amed_db_reg reg123 = {.conditional_reading=1, .datatype=MK_DATATYPE(U32), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX), .write=1};
static const amed_db_mem mem56 = {.base=(void*)&base0, .datatype=MK_DATATYPE(SX), .read=1, .size=-1, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg124 = {.type=MK_TYPE(REG), .value=MK_REG(ES), .write=1};
static const amed_db_reg reg125 = {.type=MK_TYPE(REG), .value=MK_REG(SS), .write=1};
static const amed_db_reg reg126 = {.type=MK_TYPE(REG), .value=MK_REG(DS), .write=1};
static const amed_db_reg reg127 = {.type=MK_TYPE(REG), .value=MK_REG(FS), .write=1};
static const amed_db_reg reg128 = {.type=MK_TYPE(REG), .value=MK_REG(GS), .write=1};
static const amed_db_reg reg129 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(CX), .write=1};
static const amed_db_reg reg130 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(BX), .write=1};
static const amed_db_reg reg131 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(BP), .write=1};
static const amed_db_reg reg132 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(SI), .write=1};
static const amed_db_reg reg133 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(DI), .write=1};
static const amed_db_mem mem57 = {.base=(void*)&base0, .datatype=MK_DATATYPE(SX), .read=1, .size=-9, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg134 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ECX), .write=1};
static const amed_db_reg reg135 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EBP), .write=1};
static const amed_db_reg reg136 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ESI), .write=1};
static const amed_db_reg reg137 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDI), .write=1};
static const amed_db_mem mem58 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .read=1, .size=16, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem59 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .read=1, .size=32, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem60 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S64), .read=1, .size=64, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg138 = {.encodedin=MK_ENCODEDIN(OPCODE), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG)};
static const amed_db_reg reg139 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(ES)};
static const amed_db_reg reg140 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(CS)};
static const amed_db_reg reg141 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(SS)};
static const amed_db_reg reg142 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(DS)};
static const amed_db_reg reg143 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(FS)};
static const amed_db_reg reg144 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(GS)};
static const amed_db_reg reg145 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(BX)};
static const amed_db_reg reg146 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(SP)};
static const amed_db_reg reg147 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(BP)};
static const amed_db_reg reg148 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(SI)};
static const amed_db_reg reg149 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(DI)};
static const amed_db_mem mem61 = {.base=(void*)&base0, .datatype=MK_DATATYPE(SX), .size=-9, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg150 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ESP)};
static const amed_db_reg reg151 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EBP)};
static const amed_db_reg reg152 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ESI)};
static const amed_db_reg reg153 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDI)};
static const amed_db_mem mem62 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S16), .size=16, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem63 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S32), .size=32, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem64 = {.base=(void*)&base0, .datatype=MK_DATATYPE(S64), .size=64, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem65 = {.base=(void*)&base0, .datatype=MK_DATATYPE(SX), .read=1, .size=-8, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_rotate rotate0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(ROR), .type=MK_TYPE(ROTATE)};
static const amed_db_imm imm5 = {.datatype=MK_DATATYPE(U8), .type=MK_TYPE(IMM), .value=1};
static const amed_db_reg reg154 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(CL)};
static const amed_db_rotate rotate1 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(ROL), .type=MK_TYPE(ROTATE)};
static const amed_db_reg reg155 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(AH)};
static const amed_db_mem mem66 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=80, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg156 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(GDTR)};
static const amed_db_mem mem67 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=-7, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg6 = {.datatype=MK_DATATYPE(U8), .read=1, .suppressed=1, .type=MK_TYPE(VREG), .value=MK_VREG(XMM0)};
static const amed_db_shift shift0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(SHR), .type=MK_TYPE(SHIFT)};
static const amed_db_shift shift1 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(SHL), .type=MK_TYPE(SHIFT)};
static const amed_db_reg reg157 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(IDTR)};
static const amed_db_reg reg158 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(LDTR)};
static const amed_db_reg reg159 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(CR0)};
static const amed_db_reg reg160 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(TR)};
static const amed_db_reg reg161 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RCX), .write=1};
static const amed_db_reg reg162 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(R11), .write=1};
static const amed_db_reg reg163 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(CS), .write=1};
static const amed_db_reg reg164 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RSP), .write=1};
static const amed_db_reg reg165 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ESP), .write=1};
static const amed_db_reg reg166 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(R11)};
static const amed_db_reg reg167 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg7 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg8 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg9 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem68 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem69 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg10 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg11 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_rndc rndc0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(RNDC3), .type=MK_TYPE(RNDC)};
static const amed_db_vreg vreg12 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem70 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem71 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_base base5 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(BXa), .type=MK_TYPE(BASE)};
static const amed_db_mem mem72 = {.base=(void*)&base5, .datatype=MK_DATATYPE(U8), .read=1, .seg=(void*)&seg0, .size=8, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg168 = {.datatype=MK_DATATYPE(F80), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ST0), .write=1};
static const amed_db_reg reg169 = {.datatype=MK_DATATYPE(F80), .type=MK_TYPE(REG), .value=MK_REG(ST0), .write=1};
static const amed_db_mem mem73 = {.datatype=MK_DATATYPE(BCD80), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=80, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem74 = {.datatype=MK_DATATYPE(BCD80), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=80, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg170 = {.datatype=MK_DATATYPE(F80), .read=1, .type=MK_TYPE(REG), .value=MK_REG(ST0)};
static const amed_db_reg reg171 = {.conditional_writing=1, .datatype=MK_DATATYPE(F80), .type=MK_TYPE(REG), .value=MK_REG(ST0), .write=1};
static const amed_db_reg reg172 = {.datatype=MK_DATATYPE(F80), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(FPREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg173 = {.datatype=MK_DATATYPE(F80), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ST0)};
static const amed_db_reg reg174 = {.datatype=MK_DATATYPE(F80), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ST1)};
static const amed_db_mem mem75 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem76 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem77 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem78 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem79 = {.datatype=MK_DATATYPE(F80), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=80, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem80 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem81 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=112, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem82 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=224, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg175 = {.datatype=MK_DATATYPE(F80), .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ST0), .write=1};
static const amed_db_reg reg176 = {.datatype=MK_DATATYPE(F80), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ST1), .write=1};
static const amed_db_reg reg177 = {.datatype=MK_DATATYPE(F80), .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ST1), .write=1};
static const amed_db_mem mem83 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=752, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem84 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=864, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem85 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=752, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem86 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=864, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem87 = {.datatype=MK_DATATYPE(F80), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=80, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg178 = {.datatype=MK_DATATYPE(F80), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(FPREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem88 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem89 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg179 = {.datatype=MK_DATATYPE(F80), .read=1, .type=MK_TYPE(REG), .value=MK_REG(ST0), .write=1};
static const amed_db_reg reg180 = {.datatype=MK_DATATYPE(F80), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(FPREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem90 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem91 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=112, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem92 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=224, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg181 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(BNDREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg182 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(BNDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_mib mib0 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=192, .symbol=MK_SYMBOL(MIB), .type=MK_TYPE(MIB)};
static const amed_db_mib mib1 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=96, .symbol=MK_SYMBOL(MIB), .type=MK_TYPE(MIB)};
static const amed_db_reg reg183 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(BNDREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem93 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem94 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg184 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(BNDREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem95 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem96 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mib mib2 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=192, .symbol=MK_SYMBOL(MIB), .type=MK_TYPE(MIB), .write=1};
static const amed_db_mib mib3 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=96, .symbol=MK_SYMBOL(MIB), .type=MK_TYPE(MIB), .write=1};
static const amed_db_mem mem97 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem98 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg185 = {.conditional_reading=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RBX), .write=1};
static const amed_db_reg reg186 = {.conditional_reading=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RCX), .write=1};
static const amed_db_reg reg187 = {.conditional_reading=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RDX), .write=1};
static const amed_db_reg reg188 = {.conditional_reading=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EBX), .write=1};
static const amed_db_reg reg189 = {.conditional_reading=1, .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX), .write=1};
static const amed_db_reg reg190 = {.datatype=MK_DATATYPE(U32), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX)};
static const amed_db_reg reg191 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RBX), .write=1};
static const amed_db_reg reg192 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RCX), .write=1};
static const amed_db_reg reg193 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(RDX), .write=1};
static const amed_db_reg reg194 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EBX), .write=1};
static const amed_db_reg reg195 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ECX), .write=1};
static const amed_db_reg reg196 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX), .write=1};
static const amed_db_reg reg197 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg198 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg199 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg200 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(AXa), .type=MK_TYPE(REG)};
static const amed_db_reg reg201 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRy), .type=MK_TYPE(REG)};
static const amed_db_mem mem99 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=-2, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg202 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg203 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg204 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(PKRU)};
static const amed_db_reg reg205 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPRy), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg206 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg207 = {.datatype=MK_DATATYPE(U32), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX)};
static const amed_db_reg reg208 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg209 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRa), .type=MK_TYPE(REG)};
static const amed_db_reg reg210 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(PKRU), .write=1};
static const amed_db_reg reg211 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(XCR0)};
static const amed_db_mem mem100 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=4608, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem101 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=4608, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem102 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=4608, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg212 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(XCR0), .write=1};
static const amed_db_reg reg213 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg214 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem103 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg215 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg216 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem104 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S64), .seg=(void*)&seg0, .size=64, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg217 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg218 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg219 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg220 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg221 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg222 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg223 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg224 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem105 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg225 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem106 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg226 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg227 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_imm imm6 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(INDEX), .type=MK_TYPE(IMM)};
static const amed_db_reg reg228 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem107 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem108 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg229 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_order order0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(ORDER), .type=MK_TYPE(ORDER)};
static const amed_db_reg reg230 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg231 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg232 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg233 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg234 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg235 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg236 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg237 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg238 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem109 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg239 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem110 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem111 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg13 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg14 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem112 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg15 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg16 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem113 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg240 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg241 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg242 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg243 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg17 = {.datatype=MK_DATATYPE(U64), .read=1, .suppressed=1, .type=MK_TYPE(VREG), .value=MK_VREG(XMM0)};
static const amed_db_vreg vreg18 = {.datatype=MK_DATATYPE(U32), .read=1, .suppressed=1, .type=MK_TYPE(VREG), .value=MK_VREG(XMM0)};
static const amed_db_cc cc0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(CC3), .type=MK_TYPE(CC)};
static const amed_db_reg reg244 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg245 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg246 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRy), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg247 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR8), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg19 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_reg reg248 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg20 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem114 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg249 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg250 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg251 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg252 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG)};
static const amed_db_reg reg253 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg21 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem115 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=4096, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem116 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=4096, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg254 = {.suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(MXCSR), .write=1};
static const amed_db_mem mem117 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S32), .seg=(void*)&seg0, .size=128, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg22 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg23 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem118 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg24 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem119 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg255 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg256 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg257 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg25 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem120 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem121 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg258 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg26 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_reg reg259 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MMXREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg260 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg261 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg262 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg27 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg28 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem122 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg29 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg30 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem123 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem124 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg31 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg32 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem125 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg33 = {.datatype=MK_DATATYPE(S32), .read=1, .suppressed=1, .type=MK_TYPE(VREG), .value=MK_VREG(XMM0)};
static const amed_db_vreg vreg34 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg35 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem126 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg36 = {.datatype=MK_DATATYPE(S32), .suppressed=1, .type=MK_TYPE(VREG), .value=MK_VREG(XMM0), .write=1};
static const amed_db_reg reg263 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem127 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg37 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem128 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg38 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg39 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem129 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg40 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem130 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg41 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem131 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg264 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg42 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg43 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg44 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg45 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg46 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg47 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg48 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_rndc rndc1 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(RNDC2), .type=MK_TYPE(RNDC)};
static const amed_db_reg reg265 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg266 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg267 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg268 = {.read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(MXCSR)};
static const amed_db_preg preg0 = {.encodedin=MK_ENCODEDIN(AAA), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(PREG), .zeroing=1};
static const amed_db_vreg vreg49 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_bcst bcst0 = {.encodedin=MK_ENCODEDIN(VPREFIX), .has_encodedin=1, .symbol=MK_SYMBOL(BCST), .type=MK_TYPE(BCST)};
static const amed_db_vreg vreg50 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg51 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg52 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem132 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg53 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg54 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg55 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_rc rc0 = {.encodedin=MK_ENCODEDIN(VPREFIX), .has_encodedin=1, .symbol=MK_SYMBOL(RC), .type=MK_TYPE(RC)};
static const amed_db_mem mem133 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg56 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg57 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg58 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem134 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg59 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg60 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg61 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem135 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg62 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_reg reg269 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg270 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg271 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem136 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg63 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg64 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem137 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg65 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg66 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg67 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem138 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg68 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg69 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg70 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg71 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg72 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem139 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg73 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg74 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg75 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg76 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_reg reg272 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_cc cc1 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .size=8, .symbol=MK_SYMBOL(CC5), .type=MK_TYPE(CC)};
static const amed_db_sae sae0 = {.encodedin=MK_ENCODEDIN(VPREFIX), .has_encodedin=1, .symbol=MK_SYMBOL(SAE), .type=MK_TYPE(SAE)};
static const amed_db_vreg vreg77 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem140 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg78 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_reg reg273 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg79 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg80 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg81 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg82 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg83 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg84 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg85 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem141 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg86 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem142 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg87 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem143 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg274 = {.encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg275 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg276 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg277 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg278 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg279 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem144 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg280 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg281 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg282 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPR64), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg88 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem145 = {.base=(void*)&base2, .datatype=MK_DATATYPE(U8), .seg=(void*)&seg0, .size=128, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg89 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg90 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem146 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg91 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg92 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem147 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg93 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem148 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg94 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg95 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem149 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg96 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg97 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem150 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg98 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg99 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg100 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg101 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem151 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg102 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg103 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg104 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg105 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem152 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem153 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg106 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg107 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg108 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg109 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem154 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem155 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg110 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg111 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem156 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg112 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg113 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg114 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg115 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg116 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem157 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg117 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem158 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg118 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg119 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem159 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg120 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg121 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem160 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg122 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg123 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem161 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg124 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg125 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem162 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg126 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg127 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem163 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg128 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg129 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem164 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_reg reg283 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg130 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg131 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg132 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg133 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem165 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg134 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg135 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg136 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem166 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg137 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem167 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg138 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg139 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem168 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg140 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg141 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg142 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem169 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg143 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg144 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg145 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem170 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg146 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg147 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg148 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg149 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg150 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg151 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg152 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg153 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg154 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg155 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg156 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg157 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg158 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg159 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_reg reg284 = {.datatype=MK_DATATYPE(U256), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg285 = {.datatype=MK_DATATYPE(U256), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(REG)};
static const amed_db_reg reg286 = {.datatype=MK_DATATYPE(U256), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(REG)};
static const amed_db_mem mem171 = {.datatype=MK_DATATYPE(U256), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg160 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg161 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg162 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_reg reg287 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg288 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg289 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg290 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPR32), .type=MK_TYPE(REG)};
static const amed_db_reg reg291 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg163 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg164 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg165 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg166 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg167 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg168 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg169 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg170 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg171 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg172 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg173 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg174 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg175 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg176 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg177 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg178 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg179 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_sbcst sbcst0 = {.from=2, .suppressed=1, .to=4, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst1 = {.from=2, .suppressed=1, .to=8, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst2 = {.from=2, .suppressed=1, .to=16, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst3 = {.from=4, .suppressed=1, .to=8, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst4 = {.from=4, .suppressed=1, .to=16, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst5 = {.from=8, .suppressed=1, .to=16, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst6 = {.from=1, .suppressed=1, .to=4, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst7 = {.from=1, .suppressed=1, .to=8, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst8 = {.from=1, .suppressed=1, .to=16, .type=MK_TYPE(SBCST)};
static const amed_db_vreg vreg180 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem172 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg181 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem173 = {.datatype=MK_DATATYPE(F16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg182 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg183 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_reg reg292 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_vreg vreg184 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem174 = {.datatype=MK_DATATYPE(U128), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_fexcpc fexcpc0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(FEXCPC), .type=MK_TYPE(FEXCPC)};
static const amed_db_vreg vreg185 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg186 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_reg reg293 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_fpct fpct0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(FPCT), .type=MK_TYPE(FPCT)};
static const amed_db_preg preg1 = {.encodedin=MK_ENCODEDIN(AAA), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(PREG), .write=1};
static const amed_db_mem mem175 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM)};
static const amed_db_mem mem176 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg187 = {.conditional_reading=1, .datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg188 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg189 = {.conditional_reading=1, .datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg190 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg191 = {.conditional_reading=1, .datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg192 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg193 = {.conditional_reading=1, .datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem177 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg194 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem178 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM)};
static const amed_db_mem mem179 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM)};
static const amed_db_mem mem180 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM)};
static const amed_db_signc signc0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(SIGNC), .type=MK_TYPE(SIGNC)};
static const amed_db_reg reg294 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_sbcst sbcst9 = {.from=1, .suppressed=1, .to=32, .type=MK_TYPE(SBCST)};
static const amed_db_sbcst sbcst10 = {.from=1, .suppressed=1, .to=64, .type=MK_TYPE(SBCST)};
static const amed_db_reg reg295 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_sbcst sbcst11 = {.from=1, .suppressed=1, .to=2, .type=MK_TYPE(SBCST)};
static const amed_db_reg reg296 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG)};
static const amed_db_vreg vreg195 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg196 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_ctl ctl0 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(IB), .has_encodedin=1, .read=1, .size=8, .symbol=MK_SYMBOL(CTL), .type=MK_TYPE(CTL)};
static const amed_db_vreg vreg197 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg198 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg199 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg200 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg201 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg202 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg203 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg204 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg205 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem181 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM)};
static const amed_db_mem mem182 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg206 = {.conditional_reading=1, .datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg207 = {.conditional_reading=1, .datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem183 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg208 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg209 = {.conditional_reading=1, .datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem184 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=32, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM)};
static const amed_db_mem mem185 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM)};
static const amed_db_mem mem186 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=64, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM)};
static const amed_db_mem mem187 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem188 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem189 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg210 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg211 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem190 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem191 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem192 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg212 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem193 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem194 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg213 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_mem mem195 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem196 = {.datatype=MK_DATATYPE(U8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg214 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg215 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg216 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem197 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=16, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem198 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem199 = {.datatype=MK_DATATYPE(U16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem200 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg217 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg218 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg219 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg220 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem201 = {.datatype=MK_DATATYPE(S8), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem202 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem203 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem204 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem205 = {.datatype=MK_DATATYPE(U32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem206 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem207 = {.datatype=MK_DATATYPE(U64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem208 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem209 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(VMX), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem210 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem211 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(VMY), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem212 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem213 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=64, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg297 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(GPRy), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg298 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRy), .type=MK_TYPE(REG)};
static const amed_db_imm imm7 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(ID), .has_encodedin=1, .size=32, .symbol=MK_SYMBOL(SIMM), .type=MK_TYPE(IMM)};
static const amed_db_reg reg299 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(GPRy), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg300 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(GPRv), .type=MK_TYPE(REG)};
static const amed_db_reg reg301 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg302 = {.datatype=MK_DATATYPE(SX), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(GPRy), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg303 = {.datatype=MK_DATATYPE(S32), .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EDX), .write=1};
static const amed_db_reg reg304 = {.datatype=MK_DATATYPE(S32), .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(EAX), .write=1};
static const amed_db_reg reg305 = {.datatype=MK_DATATYPE(S32), .read=1, .suppressed=1, .type=MK_TYPE(REG), .value=MK_REG(ECX)};
static const amed_db_reg reg306 = {.read=1, .type=MK_TYPE(REG), .value=MK_REG(ECX)};
static const amed_db_vreg vreg221 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg222 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg223 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg224 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg225 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg226 = {.encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg227 = {.encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg228 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg229 = {.encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_vreg vreg230 = {.encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg231 = {.encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg232 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(YMMREG), .type=MK_TYPE(VREG)};
static const amed_db_mem mem214 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=128, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_mem mem215 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=256, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_vreg vreg233 = {.datatype=MK_DATATYPE(S32), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg234 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_vreg vreg235 = {.datatype=MK_DATATYPE(S16), .encodedin=MK_ENCODEDIN(IS4), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(XMMREG), .type=MK_TYPE(VREG)};
static const amed_db_reg reg307 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(AXa), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg308 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(SIa), .type=MK_TYPE(REG)};
static const amed_db_mem mem216 = {.base=(void*)&base1, .read=1, .seg=(void*)&seg1, .size=-1, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_reg reg309 = {.aszscaling=1, .conditional_writing=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(AXa), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg310 = {.aszscaling=1, .conditional_writing=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(SIa), .type=MK_TYPE(REG), .write=1};
static const amed_db_base base6 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(AXa), .type=MK_TYPE(BASE)};
static const amed_db_mem mem217 = {.base=(void*)&base6, .conditional_writing=1, .datatype=MK_DATATYPE(SX), .read=1, .seg=(void*)&seg1, .size=-1, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_base base7 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(DXa), .type=MK_TYPE(BASE)};
static const amed_db_mem mem218 = {.base=(void*)&base7, .conditional_reading=1, .read=1, .seg=(void*)&seg1, .size=-1, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem219 = {.base=(void*)&base5, .conditional_reading=1, .datatype=MK_DATATYPE(SX), .read=1, .seg=(void*)&seg1, .size=-1, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem220 = {.base=(void*)&base1, .conditional_reading=1, .datatype=MK_DATATYPE(SX), .read=1, .seg=(void*)&seg1, .size=-1, .suppressed=1, .type=MK_TYPE(MEM)};
static const amed_db_mem mem221 = {.base=(void*)&base2, .conditional_writing=1, .datatype=MK_DATATYPE(SX), .seg=(void*)&seg1, .size=-1, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_reg reg311 = {.aszscaling=1, .conditional_writing=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(DIa), .type=MK_TYPE(REG), .write=1};
static const amed_db_reg reg312 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(CXa), .type=MK_TYPE(REG)};
static const amed_db_reg reg313 = {.aszscaling=1, .conditional_reading=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(DIa), .type=MK_TYPE(REG)};
static const amed_db_reg reg314 = {.aszscaling=1, .encodedin=MK_ENCODEDIN(ASZ), .has_encodedin=1, .read=1, .suppressed=1, .symbol=MK_SYMBOL(DIa), .type=MK_TYPE(REG), .write=1};
static const amed_db_mem mem222 = {.base=(void*)&base2, .datatype=MK_DATATYPE(S8), .seg=(void*)&seg1, .size=8, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem223 = {.base=(void*)&base2, .conditional_writing=1, .datatype=MK_DATATYPE(S8), .seg=(void*)&seg1, .size=8, .suppressed=1, .type=MK_TYPE(MEM), .write=1};
static const amed_db_swz swz0 = {.dt=MK_DT(I32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(N_I32), .table=(void*)&n_i32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_evh evh0 = {.encodedin=MK_ENCODEDIN(VPREFIX), .has_encodedin=1, .symbol=MK_SYMBOL(EVH), .type=MK_TYPE(EVH)};
static const amed_db_reg reg315 = {.encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(REG), .write=1};
static const amed_db_swz swz1 = {.dt=MK_DT(I64), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(R_I64), .type=MK_TYPE(SWZ)};
static const amed_db_mem mem224 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM)};
static const amed_db_swz swz2 = {.dt=MK_DT(F64), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_F64), .table=(void*)&su_f64_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz3 = {.dt=MK_DT(I32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(R_I32), .type=MK_TYPE(SWZ)};
static const amed_db_swz swz4 = {.dt=MK_DT(F32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_F32), .table=(void*)&su_f32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_preg preg2 = {.encodedin=MK_ENCODEDIN(AAA), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MASKREG), .type=MK_TYPE(PREG), .write=1, .zeroing=1};
static const amed_db_swz swz5 = {.dt=MK_DT(F32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(U_F32), .table=(void*)&u_f32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz6 = {.dt=MK_DT(F64), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(U_F64), .table=(void*)&u_f64_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz7 = {.dt=MK_DT(I32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(U_I32), .table=(void*)&u_i32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_vreg vreg236 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(REG), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
static const amed_db_swz swz8 = {.dt=MK_DT(I32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_I32), .table=(void*)&su_hi32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz9 = {.dt=MK_DT(I32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_I32), .table=(void*)&su_i32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz10 = {.dt=MK_DT(F32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_F32), .table=(void*)&su_hf32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz11 = {.dt=MK_DT(F32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(N_F32), .table=(void*)&n_f32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz12 = {.dt=MK_DT(I64), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_I64), .table=(void*)&su_i64_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz13 = {.dt=MK_DT(F32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_F32), .table=(void*)&su_mf32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_mem mem225 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM)};
static const amed_db_swz swz14 = {.dt=MK_DT(I64), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(U_I64), .table=(void*)&u_i64_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz15 = {.dt=MK_DT(F64), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(D_F64), .table=(void*)&d_f64_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_mem mem226 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_swz swz16 = {.dt=MK_DT(F32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(D_F32), .table=(void*)&d_f32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_swz swz17 = {.dt=MK_DT(I32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(D_I32), .table=(void*)&d_i32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_mem mem227 = {.datatype=MK_DATATYPE(S64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_swz swz18 = {.dt=MK_DT(I64), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(D_I64), .table=(void*)&d_i64_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_mem mem228 = {.datatype=MK_DATATYPE(F64), .encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .size=512, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_mem mem229 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(MEM), .type=MK_TYPE(MEM), .write=1};
static const amed_db_swz swz19 = {.dt=MK_DT(I32), .encodedin=MK_ENCODEDIN(SSS), .has_encodedin=1, .swizzle=MK_SWIZZLE(SU_I32), .table=(void*)&su_mi32_tbl, .type=MK_TYPE(SWZ)};
static const amed_db_mem mem230 = {.encodedin=MK_ENCODEDIN(RM), .has_encodedin=1, .symbol=MK_SYMBOL(VMZ), .type=MK_TYPE(MEM), .write=1};
static const amed_db_vreg vreg237 = {.datatype=MK_DATATYPE(F32), .encodedin=MK_ENCODEDIN(VVVV), .has_encodedin=1, .read=1, .symbol=MK_SYMBOL(ZMMREG), .type=MK_TYPE(VREG), .write=1};
